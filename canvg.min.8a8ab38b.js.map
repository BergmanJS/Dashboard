{"version":3,"sources":["../node_modules/rgbcolor/index.js","../node_modules/stackblur-canvas/dist/stackblur-es.js","../node_modules/canvg/dist/browser/canvg.min.js"],"names":["module","exports","color_string","ok","alpha","charAt","substr","replace","toLowerCase","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","process","bits","parseInt","parseFloat","i","length","processor","exec","channels","r","g","b","isNaN","toRGB","toRGBA","toHex","toString","getHelpXML","examples","Array","j","sc","xml","document","createElement","setAttribute","list_item","list_color","RGBColor","example_div","style","cssText","appendChild","createTextNode","list_item_value","e","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","mulTable","shgTable","processImage","img","canvas","radius","blurAlphaChannel","getElementById","w","naturalWidth","h","naturalHeight","width","height","context","getContext","clearRect","drawImage","processCanvasRGBA","processCanvasRGB","getImageDataFromCanvas","topX","topY","getImageData","Error","imageData","processImageDataRGBA","putImageData","pixels","x","y","p","yp","yi","yw","rSum","gSum","bSum","aSum","rOutSum","gOutSum","bOutSum","aOutSum","rInSum","gInSum","bInSum","aInSum","pr","pg","pb","pa","rbs","stackEnd","data","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","next","stackIn","stackOut","mulSum","shgSum","a","processImageDataRGB"],"mappings":"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","file":"canvg.min.8a8ab38b.js","sourceRoot":"..\\src","sourcesContent":["/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\n\nmodule.exports = function(color_string) {\n    this.ok = false;\n    this.alpha = 1.0;\n\n    // strip any leading #\n    if (color_string.charAt(0) == '#') { // remove # if any\n        color_string = color_string.substr(1,6);\n    }\n\n    color_string = color_string.replace(/ /g,'');\n    color_string = color_string.toLowerCase();\n\n    // before getting into regexps, try simple matches\n    // and overwrite the input\n    var simple_colors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '00ffff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000000',\n        blanchedalmond: 'ffebcd',\n        blue: '0000ff',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '00ffff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dodgerblue: '1e90ff',\n        feldspar: 'd19275',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'ff00ff',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred : 'cd5c5c',\n        indigo : '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslateblue: '8470ff',\n        lightslategray: '778899',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '00ff00',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'ff00ff',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '663399',\n        red: 'ff0000',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        violetred: 'd02090',\n        wheat: 'f5deb3',\n        white: 'ffffff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ffff00',\n        yellowgreen: '9acd32'\n    };\n    color_string = simple_colors[color_string] || color_string;\n    // emd of simple type-in colors\n\n    // array of color definition objects\n    var color_defs = [\n        {\n            re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n            example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3]),\n                    parseFloat(bits[4])\n                ];\n            }\n        },\n        {\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3])\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n            example: ['#00ff00', '336699'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1], 16),\n                    parseInt(bits[2], 16),\n                    parseInt(bits[3], 16)\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n            example: ['#fb0', 'f0f'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1] + bits[1], 16),\n                    parseInt(bits[2] + bits[2], 16),\n                    parseInt(bits[3] + bits[3], 16)\n                ];\n            }\n        }\n    ];\n\n    // search through the definitions to find a match\n    for (var i = 0; i < color_defs.length; i++) {\n        var re = color_defs[i].re;\n        var processor = color_defs[i].process;\n        var bits = re.exec(color_string);\n        if (bits) {\n            var channels = processor(bits);\n            this.r = channels[0];\n            this.g = channels[1];\n            this.b = channels[2];\n            if (channels.length > 3) {\n                this.alpha = channels[3];\n            }\n            this.ok = true;\n        }\n\n    }\n\n    // validate/cleanup values\n    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\n    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\n    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\n    this.alpha = (this.alpha < 0) ? 0 : ((this.alpha > 1.0 || isNaN(this.alpha)) ? 1.0 : this.alpha);\n\n    // some getters\n    this.toRGB = function () {\n        return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n    }\n    this.toRGBA = function () {\n        return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n    }\n    this.toHex = function () {\n        var r = this.r.toString(16);\n        var g = this.g.toString(16);\n        var b = this.b.toString(16);\n        if (r.length == 1) r = '0' + r;\n        if (g.length == 1) g = '0' + g;\n        if (b.length == 1) b = '0' + b;\n        return '#' + r + g + b;\n    }\n\n    // help\n    this.getHelpXML = function () {\n\n        var examples = new Array();\n        // add regexps\n        for (var i = 0; i < color_defs.length; i++) {\n            var example = color_defs[i].example;\n            for (var j = 0; j < example.length; j++) {\n                examples[examples.length] = example[j];\n            }\n        }\n        // add type-in colors\n        for (var sc in simple_colors) {\n            examples[examples.length] = sc;\n        }\n\n        var xml = document.createElement('ul');\n        xml.setAttribute('id', 'rgbcolor-examples');\n        for (var i = 0; i < examples.length; i++) {\n            try {\n                var list_item = document.createElement('li');\n                var list_color = new RGBColor(examples[i]);\n                var example_div = document.createElement('div');\n                example_div.style.cssText =\n                        'margin: 3px; '\n                        + 'border: 1px solid black; '\n                        + 'background:' + list_color.toHex() + '; '\n                        + 'color:' + list_color.toHex()\n                ;\n                example_div.appendChild(document.createTextNode('test'));\n                var list_item_value = document.createTextNode(\n                    ' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex()\n                );\n                list_item.appendChild(example_div);\n                list_item.appendChild(list_item_value);\n                xml.appendChild(list_item);\n\n            } catch(e){}\n        }\n        return xml;\n\n    }\n\n}\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}\n* @module StackBlur\n* @version 0.5\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || !('naturalWidth' in img)) {\n    return;\n  }\n\n  var w = img.naturalWidth;\n  var h = img.naturalHeight;\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  canvas.style.width = w + 'px';\n  canvas.style.height = h + 'px';\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, rSum, gSum, bSum, aSum, rOutSum, gOutSum, bOutSum, aOutSum, rInSum, gInSum, bInSum, aInSum, pr, pg, pb, pa, rbs;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (y = 0; y < height; y++) {\n    rInSum = gInSum = bInSum = aInSum = rSum = gSum = bSum = aSum = 0;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    aOutSum = radiusPlus1 * (pa = pixels[yi + 3]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    aSum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      aSum += (stack.a = pa = pixels[p + 3]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi + 3] = pa = aSum * mulSum >> shgSum;\n\n      if (pa !== 0) {\n        pa = 255 / pa;\n        pixels[yi] = (rSum * mulSum >> shgSum) * pa;\n        pixels[yi + 1] = (gSum * mulSum >> shgSum) * pa;\n        pixels[yi + 2] = (bSum * mulSum >> shgSum) * pa;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      aInSum += stackIn.a = pixels[p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      aOutSum += pa = stackOut.a;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    gInSum = bInSum = aInSum = rInSum = gSum = bSum = aSum = rSum = 0;\n    yi = x << 2;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    aOutSum = radiusPlus1 * (pa = pixels[yi + 3]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    aSum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      rSum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      aSum += (stack.a = pa = pixels[yi + 3]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p + 3] = pa = aSum * mulSum >> shgSum;\n\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = (rSum * mulSum >> shgSum) * pa;\n        pixels[p + 1] = (gSum * mulSum >> shgSum) * pa;\n        pixels[p + 2] = (bSum * mulSum >> shgSum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      rSum += rInSum += stackIn.r = pixels[p];\n      gSum += gInSum += stackIn.g = pixels[p + 1];\n      bSum += bInSum += stackIn.b = pixels[p + 2];\n      aSum += aInSum += stackIn.a = pixels[p + 3];\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      aOutSum += pa = stackOut.a;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, rSum, gSum, bSum, rOutSum, gOutSum, bOutSum, rInSum, gInSum, bInSum, pr, pg, pb, rbs;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (y = 0; y < height; y++) {\n    rInSum = gInSum = bInSum = rSum = gSum = bSum = 0;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >> shgSum;\n      pixels[yi + 1] = gSum * mulSum >> shgSum;\n      pixels[yi + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    gInSum = bInSum = rInSum = gSum = bSum = rSum = 0;\n    yi = x << 2;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      rSum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p] = rSum * mulSum >> shgSum;\n      pixels[p + 1] = gSum * mulSum >> shgSum;\n      pixels[p + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      rSum += rInSum += stackIn.r = pixels[p];\n      gSum += gInSum += stackIn.g = pixels[p + 1];\n      bSum += bInSum += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack = function BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processImage as image, processCanvasRGBA as canvasRGBA, processCanvasRGB as canvasRGB, processImageDataRGBA as imageDataRGBA, processImageDataRGB as imageDataRGB };\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"rgbcolor\"),require(\"stackblur-canvas\")):\"function\"==typeof define&&define.amd?define([\"rgbcolor\",\"stackblur-canvas\"],e):t.canvg=e(t.RGBColor,t.StackBlur)}(this,function(y,v){\"use strict\";var t;return y=y&&y.hasOwnProperty(\"default\")?y.default:y,v=v&&v.hasOwnProperty(\"default\")?v.default:v,function(t){var l;t.exports;(l=window).DOMParser=window.DOMParser;var c=l.document;function d(t,e){var i;return(i=c.createElement(\"canvas\")).width=t,i.height=e,i}var f,p=function(t,e,i){if(null!=t||null!=e||null!=i){var n=m(i||{});\"string\"==typeof t&&(t=c.getElementById(t)),null!=t.svg&&t.svg.stop(),t.childNodes&&1==t.childNodes.length&&\"OBJECT\"==t.childNodes[0].nodeName||(t.svg=n);var s=t.getContext(\"2d\");void 0!==e.documentElement?n.loadXmlDoc(s,e):\"<\"==e.substr(0,1)?n.loadXml(s,e):n.load(s,e)}else for(var a=c.querySelectorAll(\"svg\"),r=0;r<a.length;r++){var o=a[r],h=c.createElement(\"canvas\");if(void 0!==o.clientWidth&&void 0!==o.clientHeight)h.width=o.clientWidth,h.height=o.clientHeight;else{var l=o.getBoundingClientRect();h.width=l.width,h.height=l.height}o.parentNode.insertBefore(h,o),o.parentNode.removeChild(o);var u=c.createElement(\"div\");u.appendChild(o),p(h,u.innerHTML)}};\"undefined\"==typeof Element||(void 0!==Element.prototype.matches?f=function(t,e){return t.matches(e)}:void 0!==Element.prototype.webkitMatchesSelector?f=function(t,e){return t.webkitMatchesSelector(e)}:void 0!==Element.prototype.mozMatchesSelector?f=function(t,e){return t.mozMatchesSelector(e)}:void 0!==Element.prototype.msMatchesSelector?f=function(t,e){return t.msMatchesSelector(e)}:void 0!==Element.prototype.oMatchesSelector?f=function(t,e){return t.oMatchesSelector(e)}:(\"function\"!=typeof jQuery&&\"function\"!=typeof Zepto||(f=function(t,e){return $(t).is(e)}),void 0===f&&\"undefined\"!=typeof Sizzle&&(f=Sizzle.matchesSelector)));var e=/(\\[[^\\]]+\\])/g,i=/(#[^\\s\\+>~\\.\\[:]+)/g,a=/(\\.[^\\s\\+>~\\.\\[:]+)/g,r=/(::[^\\s\\+>~\\.\\[:]+|:first-line|:first-letter|:before|:after)/gi,o=/(:[\\w-]+\\([^\\)]*\\))/gi,h=/(:[^\\s\\+>~\\.\\[:]+)/g,u=/([^\\s\\+>~\\.\\[:]+)/g;function P(n){var s=[0,0,0],t=function(t,e){var i=n.match(t);null!=i&&(s[e]+=i.length,n=n.replace(t,\" \"))};return n=(n=n.replace(/:not\\(([^\\)]*)\\)/g,\"     $1 \")).replace(/{[\\s\\S]*/gm,\" \"),t(e,1),t(i,0),t(a,1),t(r,2),t(o,1),t(h,1),n=(n=n.replace(/[\\*\\s\\+>~]/g,\" \")).replace(/[#\\.]/g,\" \"),t(u,2),s.join(\"\")}function m(s){var D={opts:s,FRAMERATE:30,MAX_VIRTUAL_PIXELS:3e4,rootEmSize:12,emSize:12,log:function(){}};1==D.opts.log&&\"undefined\"!=typeof console&&(D.log=function(t){console.log(t)}),D.init=function(t){var e=0;D.UniqueId=function(){return\"canvg\"+ ++e},D.Definitions={},D.Styles={},D.StylesSpecificity={},D.Animations=[],D.Images=[],D.ctx=t,D.ViewPort=new function(){this.viewPorts=[],this.Clear=function(){this.viewPorts=[]},this.SetCurrent=function(t,e){this.viewPorts.push({width:t,height:e})},this.RemoveCurrent=function(){this.viewPorts.pop()},this.Current=function(){return this.viewPorts[this.viewPorts.length-1]},this.width=function(){return this.Current().width},this.height=function(){return this.Current().height},this.ComputeSize=function(t){return null!=t&&\"number\"==typeof t?t:\"x\"==t?this.width():\"y\"==t?this.height():Math.sqrt(Math.pow(this.width(),2)+Math.pow(this.height(),2))/Math.sqrt(2)}}},D.init(),D.ImagesLoaded=function(){for(var t=0;t<D.Images.length;t++)if(!D.Images[t].loaded)return!1;return!0},D.trim=function(t){return t.replace(/^\\s+|\\s+$/g,\"\")},D.compressSpaces=function(t){return t.replace(/(?!\\u3000)\\s+/gm,\" \")},D.ajax=function(t){var e;return(e=l.XMLHttpRequest?new l.XMLHttpRequest:new ActiveXObject(\"Microsoft.XMLHTTP\"))?(e.open(\"GET\",t,!1),e.send(null),e.responseText):null},D.parseXml=function(e){if(\"undefined\"!=typeof Windows&&void 0!==Windows.Data&&void 0!==Windows.Data.Xml){var t=new Windows.Data.Xml.Dom.XmlDocument,i=new Windows.Data.Xml.Dom.XmlLoadSettings;return i.prohibitDtd=!1,t.loadXml(e,i),t}if(!l.DOMParser)return e=e.replace(/<!DOCTYPE svg[^>]*>/,\"\"),(t=new ActiveXObject(\"Microsoft.XMLDOM\")).async=\"false\",t.loadXML(e),t;try{var n=s.xmldom?new l.DOMParser(s.xmldom):new l.DOMParser;return n.parseFromString(e,\"image/svg+xml\")}catch(t){return(n=s.xmldom?new l.DOMParser(s.xmldom):new l.DOMParser).parseFromString(e,\"text/xml\")}},D.Property=function(t,e){this.name=t,this.value=e},D.Property.prototype.getValue=function(){return this.value},D.Property.prototype.hasValue=function(){return null!=this.value&&\"\"!==this.value},D.Property.prototype.numValue=function(){if(!this.hasValue())return 0;var t=parseFloat(this.value);return(this.value+\"\").match(/%$/)&&(t/=100),t},D.Property.prototype.valueOrDefault=function(t){return this.hasValue()?this.value:t},D.Property.prototype.numValueOrDefault=function(t){return this.hasValue()?this.numValue():parseFloat(t)},D.Property.prototype.addOpacity=function(t){var e=this.value;if(null!=t.value&&\"\"!=t.value&&\"string\"==typeof this.value){var i=new y(this.value);i.ok&&(e=\"rgba(\"+i.r+\", \"+i.g+\", \"+i.b+\", \"+t.numValue()+\")\")}return new D.Property(this.name,e)},D.Property.prototype.getDefinition=function(){var t=this.value.match(/#([^\\)'\"]+)/);return t&&(t=t[1]),t||(t=this.value),D.Definitions[t]},D.Property.prototype.isUrlDefinition=function(){return 0==this.value.indexOf(\"url(\")},D.Property.prototype.getFillStyleDefinition=function(t,e){var i=this.getDefinition();if(null!=i&&i.createGradient)return i.createGradient(D.ctx,t,e);if(null!=i&&i.createPattern){if(i.getHrefAttribute().hasValue()){var n=i.attribute(\"patternTransform\");i=i.getHrefAttribute().getDefinition(),n.hasValue()&&(i.attribute(\"patternTransform\",!0).value=n.value)}return i.createPattern(D.ctx,t,e)}return null},D.Property.prototype.getDPI=function(){return 96},D.Property.prototype.getREM=function(){return D.rootEmSize},D.Property.prototype.getEM=function(){return D.emSize},D.Property.prototype.getUnits=function(){return(this.value+\"\").replace(/[0-9\\.\\-]/g,\"\")},D.Property.prototype.isPixels=function(){if(!this.hasValue())return!1;var t=this.value+\"\";return!!t.match(/px$/)||!!t.match(/^[0-9]+$/)},D.Property.prototype.toPixels=function(t,e){if(!this.hasValue())return 0;var i=this.value+\"\";if(i.match(/rem$/))return this.numValue()*this.getREM(t);if(i.match(/em$/))return this.numValue()*this.getEM(t);if(i.match(/ex$/))return this.numValue()*this.getEM(t)/2;if(i.match(/px$/))return this.numValue();if(i.match(/pt$/))return this.numValue()*this.getDPI(t)*(1/72);if(i.match(/pc$/))return 15*this.numValue();if(i.match(/cm$/))return this.numValue()*this.getDPI(t)/2.54;if(i.match(/mm$/))return this.numValue()*this.getDPI(t)/25.4;if(i.match(/in$/))return this.numValue()*this.getDPI(t);if(i.match(/%$/))return this.numValue()*D.ViewPort.ComputeSize(t);var n=this.numValue();return e&&n<1?n*D.ViewPort.ComputeSize(t):n},D.Property.prototype.toMilliseconds=function(){return this.hasValue()?(this.value+\"\").match(/ms$/)?this.numValue():1e3*this.numValue():0},D.Property.prototype.toRadians=function(){if(!this.hasValue())return 0;var t=this.value+\"\";return t.match(/deg$/)?this.numValue()*(Math.PI/180):t.match(/grad$/)?this.numValue()*(Math.PI/200):t.match(/rad$/)?this.numValue():this.numValue()*(Math.PI/180)};var t={baseline:\"alphabetic\",\"before-edge\":\"top\",\"text-before-edge\":\"top\",middle:\"middle\",central:\"middle\",\"after-edge\":\"bottom\",\"text-after-edge\":\"bottom\",ideographic:\"ideographic\",alphabetic:\"alphabetic\",hanging:\"hanging\",mathematical:\"alphabetic\"};return D.Property.prototype.toTextBaseline=function(){return this.hasValue()?t[this.value]:null},D.Font=new function(){this.Styles=\"normal|italic|oblique|inherit\",this.Variants=\"normal|small-caps|inherit\",this.Weights=\"normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit\",this.CreateFont=function(t,e,i,n,s,a){var r=null!=a?this.Parse(a):this.CreateFont(\"\",\"\",\"\",\"\",\"\",D.ctx.font);return{fontFamily:s=s||r.fontFamily,fontSize:n||r.fontSize,fontStyle:t||r.fontStyle,fontWeight:i||r.fontWeight,fontVariant:e||r.fontVariant,toString:function(){return[this.fontStyle,this.fontVariant,this.fontWeight,this.fontSize,this.fontFamily].join(\" \")}}};var r=this;this.Parse=function(t){for(var e={},i=D.trim(D.compressSpaces(t||\"\")).split(\" \"),n={fontSize:!1,fontStyle:!1,fontWeight:!1,fontVariant:!1},s=\"\",a=0;a<i.length;a++)n.fontStyle||-1==r.Styles.indexOf(i[a])?n.fontVariant||-1==r.Variants.indexOf(i[a])?n.fontWeight||-1==r.Weights.indexOf(i[a])?n.fontSize?\"inherit\"!=i[a]&&(s+=i[a]):(\"inherit\"!=i[a]&&(e.fontSize=i[a].split(\"/\")[0]),n.fontStyle=n.fontVariant=n.fontWeight=n.fontSize=!0):(\"inherit\"!=i[a]&&(e.fontWeight=i[a]),n.fontStyle=n.fontVariant=n.fontWeight=!0):(\"inherit\"!=i[a]&&(e.fontVariant=i[a]),n.fontStyle=n.fontVariant=!0):(\"inherit\"!=i[a]&&(e.fontStyle=i[a]),n.fontStyle=!0);return\"\"!=s&&(e.fontFamily=s),e}},D.ToNumberArray=function(t){for(var e=(t||\"\").match(/-?(\\d+(?:\\.\\d*(?:[eE][+-]?\\d+)?)?|\\.\\d+)(?=\\D|$)/gm)||[],i=0;i<e.length;i++)e[i]=parseFloat(e[i]);return e},D.Point=function(t,e){this.x=t,this.y=e},D.Point.prototype.angleTo=function(t){return Math.atan2(t.y-this.y,t.x-this.x)},D.Point.prototype.applyTransform=function(t){var e=this.x*t[0]+this.y*t[2]+t[4],i=this.x*t[1]+this.y*t[3]+t[5];this.x=e,this.y=i},D.CreatePoint=function(t){var e=D.ToNumberArray(t);return new D.Point(e[0],e[1])},D.CreatePath=function(t){for(var e=D.ToNumberArray(t),i=[],n=0;n<e.length;n+=2)i.push(new D.Point(e[n],e[n+1]));return i},D.BoundingBox=function(t,e,i,n){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN,this.x=function(){return this.x1},this.y=function(){return this.y1},this.width=function(){return this.x2-this.x1},this.height=function(){return this.y2-this.y1},this.addPoint=function(t,e){null!=t&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=t,this.x2=t),t<this.x1&&(this.x1=t),t>this.x2&&(this.x2=t)),null!=e&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=e,this.y2=e),e<this.y1&&(this.y1=e),e>this.y2&&(this.y2=e))},this.addX=function(t){this.addPoint(t,null)},this.addY=function(t){this.addPoint(null,t)},this.addBoundingBox=function(t){this.addPoint(t.x1,t.y1),this.addPoint(t.x2,t.y2)},this.addQuadraticCurve=function(t,e,i,n,s,a){var r=t+2/3*(i-t),o=e+2/3*(n-e),h=r+1/3*(s-t),l=o+1/3*(a-e);this.addBezierCurve(t,e,r,h,o,l,s,a)},this.addBezierCurve=function(t,e,i,n,s,a,r,o){var h=[t,e],l=[i,n],u=[s,a],c=[r,o];this.addPoint(h[0],h[1]),this.addPoint(c[0],c[1]);for(var f=0;f<=1;f++){var p=function(t){return Math.pow(1-t,3)*h[f]+3*Math.pow(1-t,2)*t*l[f]+3*(1-t)*Math.pow(t,2)*u[f]+Math.pow(t,3)*c[f]},d=6*h[f]-12*l[f]+6*u[f],m=-3*h[f]+9*l[f]-9*u[f]+3*c[f],y=3*l[f]-3*h[f];if(0!=m){var v=Math.pow(d,2)-4*y*m;if(!(v<0)){var g=(-d+Math.sqrt(v))/(2*m);0<g&&g<1&&(0==f&&this.addX(p(g)),1==f&&this.addY(p(g)));var x=(-d-Math.sqrt(v))/(2*m);0<x&&x<1&&(0==f&&this.addX(p(x)),1==f&&this.addY(p(x)))}}else{if(0==d)continue;var b=-y/d;0<b&&b<1&&(0==f&&this.addX(p(b)),1==f&&this.addY(p(b)))}}},this.isPointInBox=function(t,e){return this.x1<=t&&t<=this.x2&&this.y1<=e&&e<=this.y2},this.addPoint(t,e),this.addPoint(i,n)},D.Transform=function(t){var e=this;this.Type={},this.Type.translate=function(t){this.p=D.CreatePoint(t),this.apply=function(t){t.translate(this.p.x||0,this.p.y||0)},this.unapply=function(t){t.translate(-1*this.p.x||0,-1*this.p.y||0)},this.applyToPoint=function(t){t.applyTransform([1,0,0,1,this.p.x||0,this.p.y||0])}},this.Type.rotate=function(t){var e=D.ToNumberArray(t);this.angle=new D.Property(\"angle\",e[0]),this.cx=e[1]||0,this.cy=e[2]||0,this.apply=function(t){t.translate(this.cx,this.cy),t.rotate(this.angle.toRadians()),t.translate(-this.cx,-this.cy)},this.unapply=function(t){t.translate(this.cx,this.cy),t.rotate(-1*this.angle.toRadians()),t.translate(-this.cx,-this.cy)},this.applyToPoint=function(t){var e=this.angle.toRadians();t.applyTransform([1,0,0,1,this.p.x||0,this.p.y||0]),t.applyTransform([Math.cos(e),Math.sin(e),-Math.sin(e),Math.cos(e),0,0]),t.applyTransform([1,0,0,1,-this.p.x||0,-this.p.y||0])}},this.Type.scale=function(t){this.p=D.CreatePoint(t),this.apply=function(t){t.scale(this.p.x||1,this.p.y||this.p.x||1)},this.unapply=function(t){t.scale(1/this.p.x||1,1/this.p.y||this.p.x||1)},this.applyToPoint=function(t){t.applyTransform([this.p.x||0,0,0,this.p.y||0,0,0])}},this.Type.matrix=function(t){this.m=D.ToNumberArray(t),this.apply=function(t){t.transform(this.m[0],this.m[1],this.m[2],this.m[3],this.m[4],this.m[5])},this.unapply=function(t){var e=this.m[0],i=this.m[2],n=this.m[4],s=this.m[1],a=this.m[3],r=this.m[5],o=1/(e*(1*a-0*r)-i*(1*s-0*r)+n*(0*s-0*a));t.transform(o*(1*a-0*r),o*(0*r-1*s),o*(0*n-1*i),o*(1*e-0*n),o*(i*r-n*a),o*(n*s-e*r))},this.applyToPoint=function(t){t.applyTransform(this.m)}},this.Type.SkewBase=function(t){this.base=e.Type.matrix,this.base(t),this.angle=new D.Property(\"angle\",t)},this.Type.SkewBase.prototype=new this.Type.matrix,this.Type.skewX=function(t){this.base=e.Type.SkewBase,this.base(t),this.m=[1,0,Math.tan(this.angle.toRadians()),1,0,0]},this.Type.skewX.prototype=new this.Type.SkewBase,this.Type.skewY=function(t){this.base=e.Type.SkewBase,this.base(t),this.m=[1,Math.tan(this.angle.toRadians()),0,1,0,0]},this.Type.skewY.prototype=new this.Type.SkewBase,this.transforms=[],this.apply=function(t){for(var e=0;e<this.transforms.length;e++)this.transforms[e].apply(t)},this.unapply=function(t){for(var e=this.transforms.length-1;0<=e;e--)this.transforms[e].unapply(t)},this.applyToPoint=function(t){for(var e=0;e<this.transforms.length;e++)this.transforms[e].applyToPoint(t)};for(var i=D.trim(D.compressSpaces(t)).replace(/\\)([a-zA-Z])/g,\") $1\").replace(/\\)(\\s?,\\s?)/g,\") \").split(/\\s(?=[a-z])/),n=0;n<i.length;n++)if(\"none\"!==i[n]){var s=D.trim(i[n].split(\"(\")[0]),a=i[n].split(\"(\")[1].replace(\")\",\"\"),r=this.Type[s];if(void 0!==r){var o=new r(a);o.type=s,this.transforms.push(o)}}},D.AspectRatio=function(t,e,i,n,s,a,r,o,h,l){var u=(e=(e=D.compressSpaces(e)).replace(/^defer\\s/,\"\")).split(\" \")[0]||\"xMidYMid\",c=e.split(\" \")[1]||\"meet\",f=i/n,p=s/a,d=Math.min(f,p),m=Math.max(f,p);\"meet\"==c&&(n*=d,a*=d),\"slice\"==c&&(n*=m,a*=m),h=new D.Property(\"refX\",h),l=new D.Property(\"refY\",l),h.hasValue()&&l.hasValue()?t.translate(-d*h.toPixels(\"x\"),-d*l.toPixels(\"y\")):(u.match(/^xMid/)&&(\"meet\"==c&&d==p||\"slice\"==c&&m==p)&&t.translate(i/2-n/2,0),u.match(/YMid$/)&&(\"meet\"==c&&d==f||\"slice\"==c&&m==f)&&t.translate(0,s/2-a/2),u.match(/^xMax/)&&(\"meet\"==c&&d==p||\"slice\"==c&&m==p)&&t.translate(i-n,0),u.match(/YMax$/)&&(\"meet\"==c&&d==f||\"slice\"==c&&m==f)&&t.translate(0,s-a)),\"none\"==u?t.scale(f,p):\"meet\"==c?t.scale(d,d):\"slice\"==c&&t.scale(m,m),t.translate(null==r?0:-r,null==o?0:-o)},D.Element={},D.EmptyProperty=new D.Property(\"EMPTY\",\"\"),D.Element.ElementBase=function(a){this.attributes={},this.styles={},this.stylesSpecificity={},this.children=[],this.attribute=function(t,e){var i=this.attributes[t];return null!=i?i:(1==e&&(i=new D.Property(t,\"\"),this.attributes[t]=i),i||D.EmptyProperty)},this.getHrefAttribute=function(){for(var t in this.attributes)if(\"href\"==t||t.match(/:href$/))return this.attributes[t];return D.EmptyProperty},this.style=function(t,e,i){var n=this.styles[t];if(null!=n)return n;var s=this.attribute(t);if(null!=s&&s.hasValue())return this.styles[t]=s;if(1!=i){var a=this.parent;if(null!=a){var r=a.style(t);if(null!=r&&r.hasValue())return r}}return 1==e&&(n=new D.Property(t,\"\"),this.styles[t]=n),n||D.EmptyProperty},this.render=function(t){if(\"none\"!=this.style(\"display\").value&&\"hidden\"!=this.style(\"visibility\").value){if(t.save(),this.style(\"mask\").hasValue()){var e=this.style(\"mask\").getDefinition();null!=e&&e.apply(t,this)}else if(this.style(\"filter\").hasValue()){var i=this.style(\"filter\").getDefinition();null!=i&&i.apply(t,this)}else this.setContext(t),this.renderChildren(t),this.clearContext(t);t.restore()}},this.setContext=function(){},this.clearContext=function(){},this.renderChildren=function(t){for(var e=0;e<this.children.length;e++)this.children[e].render(t)},this.addChild=function(t,e){var i=t;e&&(i=D.CreateElement(t)),i.parent=this,\"title\"!=i.type&&this.children.push(i)},this.addStylesFromStyleDefinition=function(){for(var t in D.Styles)if(\"@\"!=t[0]&&f(a,t)){var e=D.Styles[t],i=D.StylesSpecificity[t];if(null!=e)for(var n in e){var s=this.stylesSpecificity[n];void 0===s&&(s=\"000\"),s<=i&&(this.styles[n]=e[n],this.stylesSpecificity[n]=i)}}};var t,e=new RegExp(\"^[A-Z-]+$\");if(null!=a&&1==a.nodeType){for(var i=0;i<a.attributes.length;i++){var n=a.attributes[i],s=(t=n.nodeName,e.test(t)?t.toLowerCase():t);this.attributes[s]=new D.Property(s,n.value)}if(this.addStylesFromStyleDefinition(),this.attribute(\"style\").hasValue()){var r=this.attribute(\"style\").value.split(\";\");for(i=0;i<r.length;i++)if(\"\"!=D.trim(r[i])){var o=r[i].split(\":\"),h=D.trim(o[0]),l=D.trim(o[1]);this.styles[h]=new D.Property(h,l)}}this.attribute(\"id\").hasValue()&&null==D.Definitions[this.attribute(\"id\").value]&&(D.Definitions[this.attribute(\"id\").value]=this);for(i=0;i<a.childNodes.length;i++){var u=a.childNodes[i];if(1==u.nodeType&&this.addChild(u,!0),this.captureTextNodes&&(3==u.nodeType||4==u.nodeType)){var c=u.value||u.text||u.textContent||\"\";\"\"!=D.compressSpaces(c)&&this.addChild(new D.Element.tspan(u),!1)}}}},D.Element.RenderedElementBase=function(t){this.base=D.Element.ElementBase,this.base(t),this.calculateOpacity=function(){for(var t=1,e=this;null!=e;){var i=e.style(\"opacity\",!1,!0);i.hasValue()&&(t*=i.numValue()),e=e.parent}return t},this.setContext=function(t,e){if(!e){var i;if(this.style(\"fill\").isUrlDefinition())null!=(i=this.style(\"fill\").getFillStyleDefinition(this,this.style(\"fill-opacity\")))&&(t.fillStyle=i);else if(this.style(\"fill\").hasValue()){var n;\"currentColor\"==(n=this.style(\"fill\")).value&&(n.value=this.style(\"color\").value),\"inherit\"!=n.value&&(t.fillStyle=\"none\"==n.value?\"rgba(0,0,0,0)\":n.value)}if(this.style(\"fill-opacity\").hasValue())n=(n=new D.Property(\"fill\",t.fillStyle)).addOpacity(this.style(\"fill-opacity\")),t.fillStyle=n.value;if(this.style(\"stroke\").isUrlDefinition())null!=(i=this.style(\"stroke\").getFillStyleDefinition(this,this.style(\"stroke-opacity\")))&&(t.strokeStyle=i);else if(this.style(\"stroke\").hasValue()){var s;\"currentColor\"==(s=this.style(\"stroke\")).value&&(s.value=this.style(\"color\").value),\"inherit\"!=s.value&&(t.strokeStyle=\"none\"==s.value?\"rgba(0,0,0,0)\":s.value)}if(this.style(\"stroke-opacity\").hasValue())s=(s=new D.Property(\"stroke\",t.strokeStyle)).addOpacity(this.style(\"stroke-opacity\")),t.strokeStyle=s.value;if(this.style(\"stroke-width\").hasValue()){var a=this.style(\"stroke-width\").toPixels();t.lineWidth=0==a?.001:a}if(this.style(\"stroke-linecap\").hasValue()&&(t.lineCap=this.style(\"stroke-linecap\").value),this.style(\"stroke-linejoin\").hasValue()&&(t.lineJoin=this.style(\"stroke-linejoin\").value),this.style(\"stroke-miterlimit\").hasValue()&&(t.miterLimit=this.style(\"stroke-miterlimit\").value),this.style(\"paint-order\").hasValue()&&(t.paintOrder=this.style(\"paint-order\").value),this.style(\"stroke-dasharray\").hasValue()&&\"none\"!=this.style(\"stroke-dasharray\").value){var r=D.ToNumberArray(this.style(\"stroke-dasharray\").value);void 0!==t.setLineDash?t.setLineDash(r):void 0!==t.webkitLineDash?t.webkitLineDash=r:void 0===t.mozDash||1==r.length&&0==r[0]||(t.mozDash=r);var o=this.style(\"stroke-dashoffset\").toPixels();void 0!==t.lineDashOffset?t.lineDashOffset=o:void 0!==t.webkitLineDashOffset?t.webkitLineDashOffset=o:void 0!==t.mozDashOffset&&(t.mozDashOffset=o)}}if(void 0!==t.font)if(this.style(\"font\").hasValue())t.font=this.style(\"font\").value;else{t.font=D.Font.CreateFont(this.style(\"font-style\").value,this.style(\"font-variant\").value,this.style(\"font-weight\").value,this.style(\"font-size\").hasValue()?this.style(\"font-size\").toPixels()+\"px\":\"\",this.style(\"font-family\").value).toString();var h=this.style(\"font-size\",!1,!1);h.isPixels()&&(D.emSize=h.toPixels())}this.style(\"transform\",!1,!0).hasValue()&&new D.Transform(this.style(\"transform\",!1,!0).value).apply(t);if(this.style(\"clip-path\",!1,!0).hasValue()){var l=this.style(\"clip-path\",!1,!0).getDefinition();null!=l&&l.apply(t)}t.globalAlpha=this.calculateOpacity()}},D.Element.RenderedElementBase.prototype=new D.Element.ElementBase,D.Element.PathElementBase=function(t){this.base=D.Element.RenderedElementBase,this.base(t),this.path=function(t){return null!=t&&t.beginPath(),new D.BoundingBox},this.renderChildren=function(t){this.path(t),D.Mouse.checkPath(this,t),\"\"!=t.fillStyle&&(\"inherit\"!=this.style(\"fill-rule\").valueOrDefault(\"inherit\")?t.fill(this.style(\"fill-rule\").value):t.fill()),\"\"!=t.strokeStyle&&t.stroke();var e=this.getMarkers();if(null!=e){if(this.style(\"marker-start\").isUrlDefinition())(i=this.style(\"marker-start\").getDefinition()).render(t,e[0][0],e[0][1]);if(this.style(\"marker-mid\").isUrlDefinition())for(var i=this.style(\"marker-mid\").getDefinition(),n=1;n<e.length-1;n++)i.render(t,e[n][0],e[n][1]);if(this.style(\"marker-end\").isUrlDefinition())(i=this.style(\"marker-end\").getDefinition()).render(t,e[e.length-1][0],e[e.length-1][1])}},this.getBoundingBox=function(){return this.path()},this.getMarkers=function(){return null}},D.Element.PathElementBase.prototype=new D.Element.RenderedElementBase,D.SetDefaults=function(t){t.strokeStyle=\"rgba(0,0,0,0)\",t.lineCap=\"butt\",t.lineJoin=\"miter\",t.miterLimit=4},D.Element.svg=function(t){this.base=D.Element.RenderedElementBase,this.base(t),this.baseClearContext=this.clearContext,this.clearContext=function(t){this.baseClearContext(t),D.ViewPort.RemoveCurrent()},this.baseSetContext=this.setContext,this.setContext=function(t){if(D.SetDefaults(t),t.canvas.style&&void 0!==t.font&&void 0!==l.getComputedStyle){t.font=l.getComputedStyle(t.canvas).getPropertyValue(\"font\");var e=new D.Property(\"fontSize\",D.Font.Parse(t.font).fontSize);e.hasValue()&&(D.rootEmSize=D.emSize=e.toPixels(\"y\"))}this.baseSetContext(t),this.attribute(\"x\").hasValue()||(this.attribute(\"x\",!0).value=0),this.attribute(\"y\").hasValue()||(this.attribute(\"y\",!0).value=0),t.translate(this.attribute(\"x\").toPixels(\"x\"),this.attribute(\"y\").toPixels(\"y\"));var i=D.ViewPort.width(),n=D.ViewPort.height();if(this.attribute(\"width\").hasValue()||(this.attribute(\"width\",!0).value=\"100%\"),this.attribute(\"height\").hasValue()||(this.attribute(\"height\",!0).value=\"100%\"),void 0===this.root){i=this.attribute(\"width\").toPixels(\"x\"),n=this.attribute(\"height\").toPixels(\"y\");var s=0,a=0;this.attribute(\"refX\").hasValue()&&this.attribute(\"refY\").hasValue()&&(s=-this.attribute(\"refX\").toPixels(\"x\"),a=-this.attribute(\"refY\").toPixels(\"y\")),\"visible\"!=this.attribute(\"overflow\").valueOrDefault(\"hidden\")&&(t.beginPath(),t.moveTo(s,a),t.lineTo(i,a),t.lineTo(i,n),t.lineTo(s,n),t.closePath(),t.clip())}if(D.ViewPort.SetCurrent(i,n),this.attribute(\"viewBox\").hasValue()){var r=D.ToNumberArray(this.attribute(\"viewBox\").value),o=r[0],h=r[1];i=r[2],n=r[3],D.AspectRatio(t,this.attribute(\"preserveAspectRatio\").value,D.ViewPort.width(),i,D.ViewPort.height(),n,o,h,this.attribute(\"refX\").value,this.attribute(\"refY\").value),D.ViewPort.RemoveCurrent(),D.ViewPort.SetCurrent(r[2],r[3])}}},D.Element.svg.prototype=new D.Element.RenderedElementBase,D.Element.rect=function(t){this.base=D.Element.PathElementBase,this.base(t),this.path=function(t){var e=this.attribute(\"x\").toPixels(\"x\"),i=this.attribute(\"y\").toPixels(\"y\"),n=this.attribute(\"width\").toPixels(\"x\"),s=this.attribute(\"height\").toPixels(\"y\"),a=this.attribute(\"rx\").toPixels(\"x\"),r=this.attribute(\"ry\").toPixels(\"y\");if(this.attribute(\"rx\").hasValue()&&!this.attribute(\"ry\").hasValue()&&(r=a),this.attribute(\"ry\").hasValue()&&!this.attribute(\"rx\").hasValue()&&(a=r),a=Math.min(a,n/2),r=Math.min(r,s/2),null!=t){var o=(Math.sqrt(2)-1)/3*4;t.beginPath(),0<s&&0<n&&(t.moveTo(e+a,i),t.lineTo(e+n-a,i),t.bezierCurveTo(e+n-a+o*a,i,e+n,i+r-o*r,e+n,i+r),t.lineTo(e+n,i+s-r),t.bezierCurveTo(e+n,i+s-r+o*r,e+n-a+o*a,i+s,e+n-a,i+s),t.lineTo(e+a,i+s),t.bezierCurveTo(e+a-o*a,i+s,e,i+s-r+o*r,e,i+s-r),t.lineTo(e,i+r),t.bezierCurveTo(e,i+r-o*r,e+a-o*a,i,e+a,i),t.closePath())}return new D.BoundingBox(e,i,e+n,i+s)}},D.Element.rect.prototype=new D.Element.PathElementBase,D.Element.circle=function(t){this.base=D.Element.PathElementBase,this.base(t),this.path=function(t){var e=this.attribute(\"cx\").toPixels(\"x\"),i=this.attribute(\"cy\").toPixels(\"y\"),n=this.attribute(\"r\").toPixels();return null!=t&&0<n&&(t.beginPath(),t.arc(e,i,n,0,2*Math.PI,!1),t.closePath()),new D.BoundingBox(e-n,i-n,e+n,i+n)}},D.Element.circle.prototype=new D.Element.PathElementBase,D.Element.ellipse=function(t){this.base=D.Element.PathElementBase,this.base(t),this.path=function(t){var e=(Math.sqrt(2)-1)/3*4,i=this.attribute(\"rx\").toPixels(\"x\"),n=this.attribute(\"ry\").toPixels(\"y\"),s=this.attribute(\"cx\").toPixels(\"x\"),a=this.attribute(\"cy\").toPixels(\"y\");return null!=t&&(t.beginPath(),t.moveTo(s+i,a),t.bezierCurveTo(s+i,a+e*n,s+e*i,a+n,s,a+n),t.bezierCurveTo(s-e*i,a+n,s-i,a+e*n,s-i,a),t.bezierCurveTo(s-i,a-e*n,s-e*i,a-n,s,a-n),t.bezierCurveTo(s+e*i,a-n,s+i,a-e*n,s+i,a),t.closePath()),new D.BoundingBox(s-i,a-n,s+i,a+n)}},D.Element.ellipse.prototype=new D.Element.PathElementBase,D.Element.line=function(t){this.base=D.Element.PathElementBase,this.base(t),this.getPoints=function(){return[new D.Point(this.attribute(\"x1\").toPixels(\"x\"),this.attribute(\"y1\").toPixels(\"y\")),new D.Point(this.attribute(\"x2\").toPixels(\"x\"),this.attribute(\"y2\").toPixels(\"y\"))]},this.path=function(t){var e=this.getPoints();return null!=t&&(t.beginPath(),t.moveTo(e[0].x,e[0].y),t.lineTo(e[1].x,e[1].y)),new D.BoundingBox(e[0].x,e[0].y,e[1].x,e[1].y)},this.getMarkers=function(){var t=this.getPoints(),e=t[0].angleTo(t[1]);return[[t[0],e],[t[1],e]]}},D.Element.line.prototype=new D.Element.PathElementBase,D.Element.polyline=function(t){this.base=D.Element.PathElementBase,this.base(t),this.points=D.CreatePath(this.attribute(\"points\").value),this.path=function(t){var e=new D.BoundingBox(this.points[0].x,this.points[0].y);null!=t&&(t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y));for(var i=1;i<this.points.length;i++)e.addPoint(this.points[i].x,this.points[i].y),null!=t&&t.lineTo(this.points[i].x,this.points[i].y);return e},this.getMarkers=function(){for(var t=[],e=0;e<this.points.length-1;e++)t.push([this.points[e],this.points[e].angleTo(this.points[e+1])]);return 0<t.length&&t.push([this.points[this.points.length-1],t[t.length-1][1]]),t}},D.Element.polyline.prototype=new D.Element.PathElementBase,D.Element.polygon=function(t){this.base=D.Element.polyline,this.base(t),this.basePath=this.path,this.path=function(t){var e=this.basePath(t);return null!=t&&(t.lineTo(this.points[0].x,this.points[0].y),t.closePath()),e}},D.Element.polygon.prototype=new D.Element.polyline,D.Element.path=function(t){this.base=D.Element.PathElementBase,this.base(t);var e=this.attribute(\"d\").value;e=e.replace(/,/gm,\" \");for(var i=0;i<2;i++)e=e.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\\s])/gm,\"$1 $2\");e=(e=e.replace(/([^\\s])([MmZzLlHhVvCcSsQqTtAa])/gm,\"$1 $2\")).replace(/([0-9])([+\\-])/gm,\"$1 $2\");for(i=0;i<2;i++)e=e.replace(/(\\.[0-9]*)(\\.)/gm,\"$1 $2\");e=e.replace(/([Aa](\\s+[0-9]+){3})\\s+([01])\\s*([01])/gm,\"$1 $3 $4 \"),e=D.compressSpaces(e),e=D.trim(e),this.PathParser=new function(t){this.tokens=t.split(\" \"),this.reset=function(){this.i=-1,this.command=\"\",this.previousCommand=\"\",this.start=new D.Point(0,0),this.control=new D.Point(0,0),this.current=new D.Point(0,0),this.points=[],this.angles=[]},this.isEnd=function(){return this.i>=this.tokens.length-1},this.isCommandOrEnd=function(){return!!this.isEnd()||null!=this.tokens[this.i+1].match(/^[A-Za-z]$/)},this.isRelativeCommand=function(){switch(this.command){case\"m\":case\"l\":case\"h\":case\"v\":case\"c\":case\"s\":case\"q\":case\"t\":case\"a\":case\"z\":return!0}return!1},this.getToken=function(){return this.i++,this.tokens[this.i]},this.getScalar=function(){return parseFloat(this.getToken())},this.nextCommand=function(){this.previousCommand=this.command,this.command=this.getToken()},this.getPoint=function(){var t=new D.Point(this.getScalar(),this.getScalar());return this.makeAbsolute(t)},this.getAsControlPoint=function(){var t=this.getPoint();return this.control=t},this.getAsCurrentPoint=function(){var t=this.getPoint();return this.current=t},this.getReflectedControlPoint=function(){return\"c\"!=this.previousCommand.toLowerCase()&&\"s\"!=this.previousCommand.toLowerCase()&&\"q\"!=this.previousCommand.toLowerCase()&&\"t\"!=this.previousCommand.toLowerCase()?this.current:new D.Point(2*this.current.x-this.control.x,2*this.current.y-this.control.y)},this.makeAbsolute=function(t){return this.isRelativeCommand()&&(t.x+=this.current.x,t.y+=this.current.y),t},this.addMarker=function(t,e,i){null!=i&&0<this.angles.length&&null==this.angles[this.angles.length-1]&&(this.angles[this.angles.length-1]=this.points[this.points.length-1].angleTo(i)),this.addMarkerAngle(t,null==e?null:e.angleTo(t))},this.addMarkerAngle=function(t,e){this.points.push(t),this.angles.push(e)},this.getMarkerPoints=function(){return this.points},this.getMarkerAngles=function(){for(var t=0;t<this.angles.length;t++)if(null==this.angles[t])for(var e=t+1;e<this.angles.length;e++)if(null!=this.angles[e]){this.angles[t]=this.angles[e];break}return this.angles}}(e),this.path=function(t){var e=this.PathParser;e.reset();var i=new D.BoundingBox;for(null!=t&&t.beginPath();!e.isEnd();)switch(e.nextCommand(),e.command){case\"M\":case\"m\":var n=e.getAsCurrentPoint();for(e.addMarker(n),i.addPoint(n.x,n.y),null!=t&&t.moveTo(n.x,n.y),e.start=e.current;!e.isCommandOrEnd();){n=e.getAsCurrentPoint();e.addMarker(n,e.start),i.addPoint(n.x,n.y),null!=t&&t.lineTo(n.x,n.y)}break;case\"L\":case\"l\":for(;!e.isCommandOrEnd();){var s=e.current;n=e.getAsCurrentPoint();e.addMarker(n,s),i.addPoint(n.x,n.y),null!=t&&t.lineTo(n.x,n.y)}break;case\"H\":case\"h\":for(;!e.isCommandOrEnd();){var a=new D.Point((e.isRelativeCommand()?e.current.x:0)+e.getScalar(),e.current.y);e.addMarker(a,e.current),e.current=a,i.addPoint(e.current.x,e.current.y),null!=t&&t.lineTo(e.current.x,e.current.y)}break;case\"V\":case\"v\":for(;!e.isCommandOrEnd();){a=new D.Point(e.current.x,(e.isRelativeCommand()?e.current.y:0)+e.getScalar());e.addMarker(a,e.current),e.current=a,i.addPoint(e.current.x,e.current.y),null!=t&&t.lineTo(e.current.x,e.current.y)}break;case\"C\":case\"c\":for(;!e.isCommandOrEnd();){var r=e.current,o=e.getPoint(),h=e.getAsControlPoint(),l=e.getAsCurrentPoint();e.addMarker(l,h,o),i.addBezierCurve(r.x,r.y,o.x,o.y,h.x,h.y,l.x,l.y),null!=t&&t.bezierCurveTo(o.x,o.y,h.x,h.y,l.x,l.y)}break;case\"S\":case\"s\":for(;!e.isCommandOrEnd();){r=e.current,o=e.getReflectedControlPoint(),h=e.getAsControlPoint(),l=e.getAsCurrentPoint();e.addMarker(l,h,o),i.addBezierCurve(r.x,r.y,o.x,o.y,h.x,h.y,l.x,l.y),null!=t&&t.bezierCurveTo(o.x,o.y,h.x,h.y,l.x,l.y)}break;case\"Q\":case\"q\":for(;!e.isCommandOrEnd();){r=e.current,h=e.getAsControlPoint(),l=e.getAsCurrentPoint();e.addMarker(l,h,h),i.addQuadraticCurve(r.x,r.y,h.x,h.y,l.x,l.y),null!=t&&t.quadraticCurveTo(h.x,h.y,l.x,l.y)}break;case\"T\":case\"t\":for(;!e.isCommandOrEnd();){r=e.current,h=e.getReflectedControlPoint();e.control=h;l=e.getAsCurrentPoint();e.addMarker(l,h,h),i.addQuadraticCurve(r.x,r.y,h.x,h.y,l.x,l.y),null!=t&&t.quadraticCurveTo(h.x,h.y,l.x,l.y)}break;case\"A\":case\"a\":for(;!e.isCommandOrEnd();){r=e.current;var u=e.getScalar(),c=e.getScalar(),f=e.getScalar()*(Math.PI/180),p=e.getScalar(),d=e.getScalar(),m=(l=e.getAsCurrentPoint(),new D.Point(Math.cos(f)*(r.x-l.x)/2+Math.sin(f)*(r.y-l.y)/2,-Math.sin(f)*(r.x-l.x)/2+Math.cos(f)*(r.y-l.y)/2)),y=Math.pow(m.x,2)/Math.pow(u,2)+Math.pow(m.y,2)/Math.pow(c,2);1<y&&(u*=Math.sqrt(y),c*=Math.sqrt(y));var v=(p==d?-1:1)*Math.sqrt((Math.pow(u,2)*Math.pow(c,2)-Math.pow(u,2)*Math.pow(m.y,2)-Math.pow(c,2)*Math.pow(m.x,2))/(Math.pow(u,2)*Math.pow(m.y,2)+Math.pow(c,2)*Math.pow(m.x,2)));isNaN(v)&&(v=0);var g=new D.Point(v*u*m.y/c,v*-c*m.x/u),x=new D.Point((r.x+l.x)/2+Math.cos(f)*g.x-Math.sin(f)*g.y,(r.y+l.y)/2+Math.sin(f)*g.x+Math.cos(f)*g.y),b=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2))},P=function(t,e){return(t[0]*e[0]+t[1]*e[1])/(b(t)*b(e))},E=function(t,e){return(t[0]*e[1]<t[1]*e[0]?-1:1)*Math.acos(P(t,e))},w=E([1,0],[(m.x-g.x)/u,(m.y-g.y)/c]),C=[(m.x-g.x)/u,(m.y-g.y)/c],B=[(-m.x-g.x)/u,(-m.y-g.y)/c],M=E(C,B);P(C,B)<=-1&&(M=Math.PI),1<=P(C,B)&&(M=0);var T=1-d?1:-1,S=w+T*(M/2),V=new D.Point(x.x+u*Math.cos(S),x.y+c*Math.sin(S));if(e.addMarkerAngle(V,S-T*Math.PI/2),e.addMarkerAngle(l,S-T*Math.PI),i.addPoint(l.x,l.y),null!=t&&!isNaN(w)&&!isNaN(M)){P=c<u?u:c;var k=c<u?1:u/c,A=c<u?c/u:1;t.translate(x.x,x.y),t.rotate(f),t.scale(k,A),t.arc(0,0,P,w,w+M,1-d),t.scale(1/k,1/A),t.rotate(-f),t.translate(-x.x,-x.y)}}break;case\"Z\":case\"z\":null!=t&&i.x1!==i.x2&&i.y1!==i.y2&&t.closePath(),e.current=e.start}return i},this.getMarkers=function(){for(var t=this.PathParser.getMarkerPoints(),e=this.PathParser.getMarkerAngles(),i=[],n=0;n<t.length;n++)i.push([t[n],e[n]]);return i}},D.Element.path.prototype=new D.Element.PathElementBase,D.Element.pattern=function(t){this.base=D.Element.ElementBase,this.base(t),this.createPattern=function(t,e,i){var n=this.attribute(\"width\").toPixels(\"x\",!0),s=this.attribute(\"height\").toPixels(\"y\",!0),a=new D.Element.svg;a.attributes.viewBox=new D.Property(\"viewBox\",this.attribute(\"viewBox\").value),a.attributes.width=new D.Property(\"width\",n+\"px\"),a.attributes.height=new D.Property(\"height\",s+\"px\"),a.attributes.transform=new D.Property(\"transform\",this.attribute(\"patternTransform\").value),a.children=this.children;var r=d(n,s),o=r.getContext(\"2d\");this.attribute(\"x\").hasValue()&&this.attribute(\"y\").hasValue()&&o.translate(this.attribute(\"x\").toPixels(\"x\",!0),this.attribute(\"y\").toPixels(\"y\",!0)),i.hasValue()?this.styles[\"fill-opacity\"]=i:delete this.styles[\"fill-opacity\"];for(var h=-1;h<=1;h++)for(var l=-1;l<=1;l++)o.save(),a.attributes.x=new D.Property(\"x\",h*r.width),a.attributes.y=new D.Property(\"y\",l*r.height),a.render(o),o.restore();return t.createPattern(r,\"repeat\")}},D.Element.pattern.prototype=new D.Element.ElementBase,D.Element.marker=function(t){this.base=D.Element.ElementBase,this.base(t),this.baseRender=this.render,this.render=function(t,e,i){if(e){t.translate(e.x,e.y),\"auto\"==this.attribute(\"orient\").valueOrDefault(\"auto\")&&t.rotate(i),\"strokeWidth\"==this.attribute(\"markerUnits\").valueOrDefault(\"strokeWidth\")&&t.scale(t.lineWidth,t.lineWidth),t.save();var n=new D.Element.svg;n.attributes.viewBox=new D.Property(\"viewBox\",this.attribute(\"viewBox\").value),n.attributes.refX=new D.Property(\"refX\",this.attribute(\"refX\").value),n.attributes.refY=new D.Property(\"refY\",this.attribute(\"refY\").value),n.attributes.width=new D.Property(\"width\",this.attribute(\"markerWidth\").value),n.attributes.height=new D.Property(\"height\",this.attribute(\"markerHeight\").value),n.attributes.fill=new D.Property(\"fill\",this.attribute(\"fill\").valueOrDefault(\"black\")),n.attributes.stroke=new D.Property(\"stroke\",this.attribute(\"stroke\").valueOrDefault(\"none\")),n.children=this.children,n.render(t),t.restore(),\"strokeWidth\"==this.attribute(\"markerUnits\").valueOrDefault(\"strokeWidth\")&&t.scale(1/t.lineWidth,1/t.lineWidth),\"auto\"==this.attribute(\"orient\").valueOrDefault(\"auto\")&&t.rotate(-i),t.translate(-e.x,-e.y)}}},D.Element.marker.prototype=new D.Element.ElementBase,D.Element.defs=function(t){this.base=D.Element.ElementBase,this.base(t),this.render=function(){}},D.Element.defs.prototype=new D.Element.ElementBase,D.Element.GradientBase=function(t){this.base=D.Element.ElementBase,this.base(t),this.stops=[];for(var e=0;e<this.children.length;e++){var i=this.children[e];\"stop\"==i.type&&this.stops.push(i)}this.getGradient=function(){},this.gradientUnits=function(){return this.attribute(\"gradientUnits\").valueOrDefault(\"objectBoundingBox\")},this.attributesToInherit=[\"gradientUnits\"],this.inheritStopContainer=function(t){for(var e=0;e<this.attributesToInherit.length;e++){var i=this.attributesToInherit[e];!this.attribute(i).hasValue()&&t.attribute(i).hasValue()&&(this.attribute(i,!0).value=t.attribute(i).value)}},this.createGradient=function(t,e,i){var n=this;this.getHrefAttribute().hasValue()&&(n=this.getHrefAttribute().getDefinition(),this.inheritStopContainer(n));var s=function(t){return i.hasValue()?new D.Property(\"color\",t).addOpacity(i).value:t},a=this.getGradient(t,e);if(null==a)return s(n.stops[n.stops.length-1].color);for(var r=0;r<n.stops.length;r++)a.addColorStop(n.stops[r].offset,s(n.stops[r].color));if(this.attribute(\"gradientTransform\").hasValue()){var o=D.ViewPort.viewPorts[0],h=new D.Element.rect;h.attributes.x=new D.Property(\"x\",-D.MAX_VIRTUAL_PIXELS/3),h.attributes.y=new D.Property(\"y\",-D.MAX_VIRTUAL_PIXELS/3),h.attributes.width=new D.Property(\"width\",D.MAX_VIRTUAL_PIXELS),h.attributes.height=new D.Property(\"height\",D.MAX_VIRTUAL_PIXELS);var l=new D.Element.g;l.attributes.transform=new D.Property(\"transform\",this.attribute(\"gradientTransform\").value),l.children=[h];var u=new D.Element.svg;u.attributes.x=new D.Property(\"x\",0),u.attributes.y=new D.Property(\"y\",0),u.attributes.width=new D.Property(\"width\",o.width),u.attributes.height=new D.Property(\"height\",o.height),u.children=[l];var c=d(o.width,o.height),f=c.getContext(\"2d\");return f.fillStyle=a,u.render(f),f.createPattern(c,\"no-repeat\")}return a}},D.Element.GradientBase.prototype=new D.Element.ElementBase,D.Element.linearGradient=function(t){this.base=D.Element.GradientBase,this.base(t),this.attributesToInherit.push(\"x1\"),this.attributesToInherit.push(\"y1\"),this.attributesToInherit.push(\"x2\"),this.attributesToInherit.push(\"y2\"),this.getGradient=function(t,e){var i=\"objectBoundingBox\"==this.gradientUnits()?e.getBoundingBox(t):null;this.attribute(\"x1\").hasValue()||this.attribute(\"y1\").hasValue()||this.attribute(\"x2\").hasValue()||this.attribute(\"y2\").hasValue()||(this.attribute(\"x1\",!0).value=0,this.attribute(\"y1\",!0).value=0,this.attribute(\"x2\",!0).value=1,this.attribute(\"y2\",!0).value=0);var n=\"objectBoundingBox\"==this.gradientUnits()?i.x()+i.width()*this.attribute(\"x1\").numValue():this.attribute(\"x1\").toPixels(\"x\"),s=\"objectBoundingBox\"==this.gradientUnits()?i.y()+i.height()*this.attribute(\"y1\").numValue():this.attribute(\"y1\").toPixels(\"y\"),a=\"objectBoundingBox\"==this.gradientUnits()?i.x()+i.width()*this.attribute(\"x2\").numValue():this.attribute(\"x2\").toPixels(\"x\"),r=\"objectBoundingBox\"==this.gradientUnits()?i.y()+i.height()*this.attribute(\"y2\").numValue():this.attribute(\"y2\").toPixels(\"y\");return n==a&&s==r?null:t.createLinearGradient(n,s,a,r)}},D.Element.linearGradient.prototype=new D.Element.GradientBase,D.Element.radialGradient=function(t){this.base=D.Element.GradientBase,this.base(t),this.attributesToInherit.push(\"cx\"),this.attributesToInherit.push(\"cy\"),this.attributesToInherit.push(\"r\"),this.attributesToInherit.push(\"fx\"),this.attributesToInherit.push(\"fy\"),this.attributesToInherit.push(\"fr\"),this.getGradient=function(t,e){var i=e.getBoundingBox(t);this.attribute(\"cx\").hasValue()||(this.attribute(\"cx\",!0).value=\"50%\"),this.attribute(\"cy\").hasValue()||(this.attribute(\"cy\",!0).value=\"50%\"),this.attribute(\"r\").hasValue()||(this.attribute(\"r\",!0).value=\"50%\");var n=\"objectBoundingBox\"==this.gradientUnits()?i.x()+i.width()*this.attribute(\"cx\").numValue():this.attribute(\"cx\").toPixels(\"x\"),s=\"objectBoundingBox\"==this.gradientUnits()?i.y()+i.height()*this.attribute(\"cy\").numValue():this.attribute(\"cy\").toPixels(\"y\"),a=n,r=s;this.attribute(\"fx\").hasValue()&&(a=\"objectBoundingBox\"==this.gradientUnits()?i.x()+i.width()*this.attribute(\"fx\").numValue():this.attribute(\"fx\").toPixels(\"x\")),this.attribute(\"fy\").hasValue()&&(r=\"objectBoundingBox\"==this.gradientUnits()?i.y()+i.height()*this.attribute(\"fy\").numValue():this.attribute(\"fy\").toPixels(\"y\"));var o=\"objectBoundingBox\"==this.gradientUnits()?(i.width()+i.height())/2*this.attribute(\"r\").numValue():this.attribute(\"r\").toPixels(),h=this.attribute(\"fr\").toPixels();return t.createRadialGradient(a,r,h,n,s,o)}},D.Element.radialGradient.prototype=new D.Element.GradientBase,D.Element.stop=function(t){this.base=D.Element.ElementBase,this.base(t),this.offset=this.attribute(\"offset\").numValue(),this.offset<0&&(this.offset=0),1<this.offset&&(this.offset=1);var e=this.style(\"stop-color\",!0);\"\"===e.value&&(e.value=\"#000\"),this.style(\"stop-opacity\").hasValue()&&(e=e.addOpacity(this.style(\"stop-opacity\"))),this.color=e.value},D.Element.stop.prototype=new D.Element.ElementBase,D.Element.AnimateBase=function(t){this.base=D.Element.ElementBase,this.base(t),D.Animations.push(this),this.duration=0,this.begin=this.attribute(\"begin\").toMilliseconds(),this.maxDuration=this.begin+this.attribute(\"dur\").toMilliseconds(),this.getProperty=function(){var t=this.attribute(\"attributeType\").value,e=this.attribute(\"attributeName\").value;return\"CSS\"==t?this.parent.style(e,!0):this.parent.attribute(e,!0)},this.initialValue=null,this.initialUnits=\"\",this.removed=!1,this.calcValue=function(){return\"\"},this.update=function(t){if(null==this.initialValue&&(this.initialValue=this.getProperty().value,this.initialUnits=this.getProperty().getUnits()),this.duration>this.maxDuration){if(\"indefinite\"==this.attribute(\"repeatCount\").value||\"indefinite\"==this.attribute(\"repeatDur\").value)this.duration=0;else if(\"freeze\"!=this.attribute(\"fill\").valueOrDefault(\"remove\")||this.frozen){if(\"remove\"==this.attribute(\"fill\").valueOrDefault(\"remove\")&&!this.removed)return this.removed=!0,this.getProperty().value=this.parent.animationFrozen?this.parent.animationFrozenValue:this.initialValue,!0}else this.frozen=!0,this.parent.animationFrozen=!0,this.parent.animationFrozenValue=this.getProperty().value;return!1}this.duration=this.duration+t;var e=!1;if(this.begin<this.duration){var i=this.calcValue();if(this.attribute(\"type\").hasValue())i=this.attribute(\"type\").value+\"(\"+i+\")\";this.getProperty().value=i,e=!0}return e},this.from=this.attribute(\"from\"),this.to=this.attribute(\"to\"),this.values=this.attribute(\"values\"),this.values.hasValue()&&(this.values.value=this.values.value.split(\";\")),this.progress=function(){var t={progress:(this.duration-this.begin)/(this.maxDuration-this.begin)};if(this.values.hasValue()){var e=t.progress*(this.values.value.length-1),i=Math.floor(e),n=Math.ceil(e);t.from=new D.Property(\"from\",parseFloat(this.values.value[i])),t.to=new D.Property(\"to\",parseFloat(this.values.value[n])),t.progress=(e-i)/(n-i)}else t.from=this.from,t.to=this.to;return t}},D.Element.AnimateBase.prototype=new D.Element.ElementBase,D.Element.animate=function(t){this.base=D.Element.AnimateBase,this.base(t),this.calcValue=function(){var t=this.progress(),e=t.from.numValue()+(t.to.numValue()-t.from.numValue())*t.progress;return\"%\"===this.initialUnits&&(e*=100),e+this.initialUnits}},D.Element.animate.prototype=new D.Element.AnimateBase,D.Element.animateColor=function(t){this.base=D.Element.AnimateBase,this.base(t),this.calcValue=function(){var t=this.progress(),e=new y(t.from.value),i=new y(t.to.value);if(e.ok&&i.ok){var n=e.r+(i.r-e.r)*t.progress,s=e.g+(i.g-e.g)*t.progress,a=e.b+(i.b-e.b)*t.progress;return\"rgb(\"+parseInt(n,10)+\",\"+parseInt(s,10)+\",\"+parseInt(a,10)+\")\"}return this.attribute(\"from\").value}},D.Element.animateColor.prototype=new D.Element.AnimateBase,D.Element.animateTransform=function(t){this.base=D.Element.AnimateBase,this.base(t),this.calcValue=function(){for(var t=this.progress(),e=D.ToNumberArray(t.from.value),i=D.ToNumberArray(t.to.value),n=\"\",s=0;s<e.length;s++)n+=e[s]+(i[s]-e[s])*t.progress+\" \";return n}},D.Element.animateTransform.prototype=new D.Element.animate,D.Element.font=function(t){this.base=D.Element.ElementBase,this.base(t),this.horizAdvX=this.attribute(\"horiz-adv-x\").numValue(),this.isRTL=!1,this.isArabic=!1,this.fontFace=null,this.missingGlyph=null,this.glyphs=[];for(var e=0;e<this.children.length;e++){var i=this.children[e];\"font-face\"==i.type?(this.fontFace=i).style(\"font-family\").hasValue()&&(D.Definitions[i.style(\"font-family\").value]=this):\"missing-glyph\"==i.type?this.missingGlyph=i:\"glyph\"==i.type&&(\"\"!=i.arabicForm?(this.isRTL=!0,this.isArabic=!0,void 0===this.glyphs[i.unicode]&&(this.glyphs[i.unicode]=[]),this.glyphs[i.unicode][i.arabicForm]=i):this.glyphs[i.unicode]=i)}this.render=function(){}},D.Element.font.prototype=new D.Element.ElementBase,D.Element.fontface=function(t){this.base=D.Element.ElementBase,this.base(t),this.ascent=this.attribute(\"ascent\").value,this.descent=this.attribute(\"descent\").value,this.unitsPerEm=this.attribute(\"units-per-em\").numValue()},D.Element.fontface.prototype=new D.Element.ElementBase,D.Element.missingglyph=function(t){this.base=D.Element.path,this.base(t),this.horizAdvX=0},D.Element.missingglyph.prototype=new D.Element.path,D.Element.glyph=function(t){this.base=D.Element.path,this.base(t),this.horizAdvX=this.attribute(\"horiz-adv-x\").numValue(),this.unicode=this.attribute(\"unicode\").value,this.arabicForm=this.attribute(\"arabic-form\").value},D.Element.glyph.prototype=new D.Element.path,D.Element.text=function(t){this.captureTextNodes=!0,this.base=D.Element.RenderedElementBase,this.base(t),this.baseSetContext=this.setContext,this.setContext=function(t){this.baseSetContext(t);var e=this.style(\"dominant-baseline\").toTextBaseline();null==e&&(e=this.style(\"alignment-baseline\").toTextBaseline()),null!=e&&(t.textBaseline=e)},this.initializeCoordinates=function(t){this.x=this.attribute(\"x\").toPixels(\"x\"),this.y=this.attribute(\"y\").toPixels(\"y\"),this.attribute(\"dx\").hasValue()&&(this.x+=this.attribute(\"dx\").toPixels(\"x\")),this.attribute(\"dy\").hasValue()&&(this.y+=this.attribute(\"dy\").toPixels(\"y\")),this.x+=this.getAnchorDelta(t,this,0)},this.getBoundingBox=function(t){this.initializeCoordinates(t);for(var e=null,i=0;i<this.children.length;i++){var n=this.getChildBoundingBox(t,this,this,i);null==e?e=n:e.addBoundingBox(n)}return e},this.renderChildren=function(t){this.initializeCoordinates(t);for(var e=0;e<this.children.length;e++)this.renderChild(t,this,this,e);D.Mouse.checkBoundingBox(this,this.getBoundingBox(t))},this.getAnchorDelta=function(t,e,i){var n=this.style(\"text-anchor\").valueOrDefault(\"start\");if(\"start\"==n)return 0;for(var s=0,a=i;a<e.children.length;a++){var r=e.children[a];if(i<a&&r.attribute(\"x\").hasValue())break;s+=r.measureTextRecursive(t)}return-1*(\"end\"==n?s:s/2)},this.adjustChildCoordinates=function(t,e,i,n){var s=i.children[n];if(\"function\"!=typeof s.measureText)return s;if(s.attribute(\"x\").hasValue()){s.x=s.attribute(\"x\").toPixels(\"x\")+e.getAnchorDelta(t,i,n);var a=s.attribute(\"text-anchor\").valueOrDefault(\"start\");if(\"start\"!==a){var r=s.measureTextRecursive(t);s.x+=-1*(\"end\"==a?r:r/2)}s.attribute(\"dx\").hasValue()&&(s.x+=s.attribute(\"dx\").toPixels(\"x\"))}else s.attribute(\"dx\").hasValue()&&(e.x+=s.attribute(\"dx\").toPixels(\"x\")),s.x=e.x;return e.x=s.x+s.measureText(t),s.attribute(\"y\").hasValue()?(s.y=s.attribute(\"y\").toPixels(\"y\"),s.attribute(\"dy\").hasValue()&&(s.y+=s.attribute(\"dy\").toPixels(\"y\"))):(s.attribute(\"dy\").hasValue()&&(e.y+=s.attribute(\"dy\").toPixels(\"y\")),s.y=e.y),e.y=s.y,s},this.getChildBoundingBox=function(t,e,i,n){var s=this.adjustChildCoordinates(t,e,i,n),a=s.getBoundingBox(t);for(n=0;n<s.children.length;n++){var r=e.getChildBoundingBox(t,e,s,n);a.addBoundingBox(r)}return a},this.renderChild=function(t,e,i,n){var s=this.adjustChildCoordinates(t,e,i,n);s.render(t);for(n=0;n<s.children.length;n++)e.renderChild(t,e,s,n)}},D.Element.text.prototype=new D.Element.RenderedElementBase,D.Element.TextElementBase=function(t){this.base=D.Element.RenderedElementBase,this.base(t),this.getGlyph=function(t,e,i){var n=e[i],s=null;if(t.isArabic){var a=\"isolated\";(0==i||\" \"==e[i-1])&&i<e.length-2&&\" \"!=e[i+1]&&(a=\"terminal\"),0<i&&\" \"!=e[i-1]&&i<e.length-2&&\" \"!=e[i+1]&&(a=\"medial\"),0<i&&\" \"!=e[i-1]&&(i==e.length-1||\" \"==e[i+1])&&(a=\"initial\"),void 0!==t.glyphs[n]&&null==(s=t.glyphs[n][a])&&\"glyph\"==t.glyphs[n].type&&(s=t.glyphs[n])}else s=t.glyphs[n];return null==s&&(s=t.missingGlyph),s},this.renderChildren=function(t){var e=this.parent.style(\"font-family\").getDefinition();if(null==e)\"stroke\"==t.paintOrder?(\"\"!=t.strokeStyle&&t.strokeText(D.compressSpaces(this.getText()),this.x,this.y),\"\"!=t.fillStyle&&t.fillText(D.compressSpaces(this.getText()),this.x,this.y)):(\"\"!=t.fillStyle&&t.fillText(D.compressSpaces(this.getText()),this.x,this.y),\"\"!=t.strokeStyle&&t.strokeText(D.compressSpaces(this.getText()),this.x,this.y));else{var i=this.parent.style(\"font-size\").numValueOrDefault(D.Font.Parse(D.ctx.font).fontSize),n=this.parent.style(\"font-style\").valueOrDefault(D.Font.Parse(D.ctx.font).fontStyle),s=this.getText();e.isRTL&&(s=s.split(\"\").reverse().join(\"\"));for(var a=D.ToNumberArray(this.parent.attribute(\"dx\").value),r=0;r<s.length;r++){var o=this.getGlyph(e,s,r),h=i/e.fontFace.unitsPerEm;t.translate(this.x,this.y),t.scale(h,-h);var l=t.lineWidth;t.lineWidth=t.lineWidth*e.fontFace.unitsPerEm/i,\"italic\"==n&&t.transform(1,0,.4,1,0,0),o.render(t),\"italic\"==n&&t.transform(1,0,-.4,1,0,0),t.lineWidth=l,t.scale(1/h,-1/h),t.translate(-this.x,-this.y),this.x+=i*(o.horizAdvX||e.horizAdvX)/e.fontFace.unitsPerEm,void 0===a[r]||isNaN(a[r])||(this.x+=a[r])}}},this.getText=function(){},this.measureTextRecursive=function(t){for(var e=this.measureText(t),i=0;i<this.children.length;i++)e+=this.children[i].measureTextRecursive(t);return e},this.measureText=function(t){var e=this.parent.style(\"font-family\").getDefinition();if(null!=e){var i=this.parent.style(\"font-size\").numValueOrDefault(D.Font.Parse(D.ctx.font).fontSize),n=0,s=this.getText();e.isRTL&&(s=s.split(\"\").reverse().join(\"\"));for(var a=D.ToNumberArray(this.parent.attribute(\"dx\").value),r=0;r<s.length;r++){n+=(this.getGlyph(e,s,r).horizAdvX||e.horizAdvX)*i/e.fontFace.unitsPerEm,void 0===a[r]||isNaN(a[r])||(n+=a[r])}return n}var o=D.compressSpaces(this.getText());if(!t.measureText)return 10*o.length;t.save(),this.setContext(t,!0);var h=t.measureText(o).width;return t.restore(),h},this.getBoundingBox=function(t){var e=this.parent.style(\"font-size\").numValueOrDefault(D.Font.Parse(D.ctx.font).fontSize);return new D.BoundingBox(this.x,this.y-e,this.x+this.measureText(t),this.y)}},D.Element.TextElementBase.prototype=new D.Element.RenderedElementBase,D.Element.tspan=function(t){this.captureTextNodes=!0,this.base=D.Element.TextElementBase,this.base(t),this.text=D.compressSpaces(t.value||t.text||t.textContent||\"\"),this.getText=function(){return 0<this.children.length?\"\":this.text}},D.Element.tspan.prototype=new D.Element.TextElementBase,D.Element.tref=function(t){this.base=D.Element.TextElementBase,this.base(t),this.getText=function(){var t=this.getHrefAttribute().getDefinition();if(null!=t)return t.children[0].getText()}},D.Element.tref.prototype=new D.Element.TextElementBase,D.Element.a=function(t){this.base=D.Element.TextElementBase,this.base(t),this.hasText=0<t.childNodes.length;for(var e=0;e<t.childNodes.length;e++)3!=t.childNodes[e].nodeType&&(this.hasText=!1);this.text=this.hasText?t.childNodes[0].value||t.childNodes[0].data:\"\",this.getText=function(){return this.text},this.baseRenderChildren=this.renderChildren,this.renderChildren=function(t){if(this.hasText){this.baseRenderChildren(t);var e=new D.Property(\"fontSize\",D.Font.Parse(D.ctx.font).fontSize);D.Mouse.checkBoundingBox(this,new D.BoundingBox(this.x,this.y-e.toPixels(\"y\"),this.x+this.measureText(t),this.y))}else if(0<this.children.length){var i=new D.Element.g;i.children=this.children,i.parent=this,i.render(t)}},this.onclick=function(){l.open(this.getHrefAttribute().value)},this.onmousemove=function(){D.ctx.canvas.style.cursor=\"pointer\"}},D.Element.a.prototype=new D.Element.TextElementBase,D.Element.textPath=function(t){this.base=D.Element.TextElementBase,this.base(t);var e=this.getHrefAttribute().getDefinition();this.text=D.compressSpaces(t.value||t.text||t.textContent||\"\"),this.renderChildren=function(t){this.setTextData(t),t.save();var e=this.parent.style(\"text-decoration\").value,i=this.fontSize(),n=this.glyphInfo,s=t.fillStyle;\"underline\"===e&&t.beginPath();for(var a=0;a<n.length;a++){var r=n[a].p0,o=n[a].p1,h=n[a].text;t.save(),t.translate(r.x,r.y),t.rotate(n[a].rotation),\"\"!=t.fillStyle&&t.fillText(D.compressSpaces(h),0,0),\"\"!=t.strokeStyle&&t.strokeText(D.compressSpaces(h),0,0),t.restore(),\"underline\"===e&&(0===a&&t.moveTo(r.x,r.y+i/8),t.lineTo(o.x,o.y+i/5))}\"underline\"===e&&(t.lineWidth=i/20,t.strokeStyle=s,t.stroke(),t.closePath()),t.restore()},this.path=function(t){var e=this.dataArray;null!=t&&t.beginPath();for(var i=0;i<e.length;i++){var n=e[i].command,s=e[i].points;switch(n){case\"L\":null!=t&&t.lineTo(s[0],s[1]);break;case\"M\":null!=t&&t.moveTo(s[0],s[1]);break;case\"C\":null!=t&&t.bezierCurveTo(s[0],s[1],s[2],s[3],s[4],s[5]);break;case\"Q\":null!=t&&t.quadraticCurveTo(s[0],s[1],s[2],s[3]);break;case\"A\":var a=s[0],r=s[1],o=s[2],h=s[3],l=s[4],u=s[5],c=s[6],f=s[7],p=h<o?o:h,d=h<o?1:o/h,m=h<o?h/o:1;null!=t&&(t.translate(a,r),t.rotate(c),t.scale(d,m),t.arc(0,0,p,l,l+u,1-f),t.scale(1/d,1/m),t.rotate(-c),t.translate(-a,-r));break;case\"z\":null!=t&&t.closePath()}}},this.getText=function(){return this.text},this.fontSize=function(){return this.parent.style(\"font-size\").numValueOrDefault(D.Font.Parse(D.ctx.font).fontSize)},this.measureText=function(t,e){var i=this.parent.style(\"font-family\").getDefinition();if(e=e||this.getText(),null!=i){var n=this.fontSize(),s=0;i.isRTL&&(e=e.split(\"\").reverse().join(\"\"));for(var a=D.ToNumberArray(this.parent.attribute(\"dx\").value),r=0;r<e.length;r++){s+=(this.getGlyph(i,e,r).horizAdvX||i.horizAdvX)*n/i.fontFace.unitsPerEm,void 0===a[r]||isNaN(a[r])||(s+=a[r])}return s}var o=D.compressSpaces(e);if(!t.measureText)return 10*o.length;t.save(),this.setContext(t);var h=t.measureText(o).width;return t.restore(),h},this.setTextData=function(r){if(!this.hasOwnProperty(\"glyphInfo\")){var o=this,t=this.getText().split(\"\"),h=this.getText().split(\" \").length-1,e=D.ToNumberArray(this.parent.attribute(\"dx\").valueOrDefault(\"0\")),i=0,l=this.parent.style(\"text-anchor\").valueOrDefault(\"start\"),n=this.style(\"letter-spacing\"),s=this.parent.style(\"letter-spacing\");n.hasValue()&&\"inherit\"!==n.getValue()?n.hasValue()&&\"initial\"!==n.getValue()&&\"unset\"!==n.getValue()&&(i=n.toPixels()):i=s.toPixels(),this.letterSpacingCache=[];for(var a=0;a<this.getText().length;a++)this.letterSpacingCache.push(void 0!==e[a]?e[a]:i);var u=this.letterSpacingCache.reduce(function(t,e){return t+e||0},0);this.textWidth=this.measureText(r),this.textHeight=this.fontSize();var c=Math.max(this.textWidth+u,0);this.glyphInfo=[];var f=this.getPathLength(),p=this.style(\"startOffset\").numValueOrDefault(0)*f,d=0;\"middle\"!==l&&\"center\"!==l||(d=-c/2),\"end\"!==l&&\"right\"!==l||(d=-c),d+=p;var m=function(t,e){var i,n=o.measureText(r,t);\" \"===t&&\"justify\"===l&&c<f&&(n+=(f-c)/h),-1<e&&(d+=(i=(i=e)||0,o.letterSpacingCache[i]||0));var s=o.textHeight/20,a={p0:o.getEquidistantPointOnPath(d,s),p1:o.getEquidistantPointOnPath(d+n,s)};return d+=n,a};for(a=0;a<t.length;a++){var y=m(t[a],a);if(void 0!==y.p0&&void 0!==y.p1){var v=o.getLineLength(y.p0.x,y.p0.y,y.p1.x,y.p1.y),g=o.getPointOnLine(0+v/2,y.p0.x,y.p0.y,y.p1.x,y.p1.y),x=Math.atan2(y.p1.y-y.p0.y,y.p1.x-y.p0.x);this.glyphInfo.push({transposeX:g.x,transposeY:g.y,text:t[a],rotation:x,p0:y.p0,p1:y.p1})}}}},this.parsePathData=function(t){if(this.pathLength=void 0,!t)return[];var e=[],i=t.PathParser;for(i.reset();!i.isEnd();){var n=[],s=null,a=i.current?i.current.x:0,r=i.current?i.current.y:0;i.nextCommand();var o=i.command.toUpperCase();switch(i.command){case\"M\":case\"m\":var h=i.getAsCurrentPoint();for(n.push(h.x,h.y),i.start=i.current;!i.isCommandOrEnd();){h=i.getAsCurrentPoint();n.push(h.x,h.y),s=\"L\"}break;case\"L\":case\"l\":for(;!i.isCommandOrEnd();){h=i.getAsCurrentPoint();n.push(h.x,h.y)}s=\"L\";break;case\"H\":case\"h\":for(;!i.isCommandOrEnd();){var l=new D.Point((i.isRelativeCommand()?i.current.x:0)+i.getScalar(),i.current.y);n.push(l.x,l.y),i.current=l}s=\"L\";break;case\"V\":case\"v\":for(;!i.isCommandOrEnd();){l=new D.Point(i.current.x,(i.isRelativeCommand()?i.current.y:0)+i.getScalar());n.push(l.x,l.y),i.current=l}s=\"L\";break;case\"C\":case\"c\":for(;!i.isCommandOrEnd();){var u=i.getPoint(),c=i.getAsControlPoint(),f=i.getAsCurrentPoint();n.push(u.x,u.y,c.x,c.y,f.x,f.y)}break;case\"S\":case\"s\":for(;!i.isCommandOrEnd();){u=i.getReflectedControlPoint(),c=i.getAsControlPoint(),f=i.getAsCurrentPoint();n.push(u.x,u.y,c.x,c.y,f.x,f.y)}s=\"C\";break;case\"Q\":case\"q\":for(;!i.isCommandOrEnd();){c=i.getAsControlPoint(),f=i.getAsCurrentPoint();n.push(c.x,c.y,f.x,f.y)}break;case\"T\":case\"t\":for(;!i.isCommandOrEnd();){c=i.getReflectedControlPoint();i.control=c;f=i.getAsCurrentPoint();n.push(c.x,c.y,f.x,f.y)}s=\"Q\";break;case\"A\":case\"a\":for(;!i.isCommandOrEnd();){var p=i.current,d=i.getScalar(),m=i.getScalar(),y=i.getScalar()*(Math.PI/180),v=i.getScalar(),g=i.getScalar(),x=(f=i.getAsCurrentPoint(),new D.Point(Math.cos(y)*(p.x-f.x)/2+Math.sin(y)*(p.y-f.y)/2,-Math.sin(y)*(p.x-f.x)/2+Math.cos(y)*(p.y-f.y)/2)),b=Math.pow(x.x,2)/Math.pow(d,2)+Math.pow(x.y,2)/Math.pow(m,2);1<b&&(d*=Math.sqrt(b),m*=Math.sqrt(b));var P=(v==g?-1:1)*Math.sqrt((Math.pow(d,2)*Math.pow(m,2)-Math.pow(d,2)*Math.pow(x.y,2)-Math.pow(m,2)*Math.pow(x.x,2))/(Math.pow(d,2)*Math.pow(x.y,2)+Math.pow(m,2)*Math.pow(x.x,2)));isNaN(P)&&(P=0);var E=new D.Point(P*d*x.y/m,P*-m*x.x/d),w=new D.Point((p.x+f.x)/2+Math.cos(y)*E.x-Math.sin(y)*E.y,(p.y+f.y)/2+Math.sin(y)*E.x+Math.cos(y)*E.y),C=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2))},B=function(t,e){return(t[0]*e[0]+t[1]*e[1])/(C(t)*C(e))},M=function(t,e){return(t[0]*e[1]<t[1]*e[0]?-1:1)*Math.acos(B(t,e))},T=M([1,0],[(x.x-E.x)/d,(x.y-E.y)/m]),S=[(x.x-E.x)/d,(x.y-E.y)/m],V=[(-x.x-E.x)/d,(-x.y-E.y)/m],k=M(S,V);B(S,V)<=-1&&(k=Math.PI),1<=B(S,V)&&(k=0),0===g&&0<k&&(k-=2*Math.PI),1===g&&k<0&&(k+=2*Math.PI),n=[w.x,w.y,d,m,T,k,y,g]}break;case\"Z\":case\"z\":i.current=i.start}\"Z\"!==o?e.push({command:s||o,points:n,start:{x:a,y:r},pathLength:this.calcLength(a,r,s||o,n)}):e.push({command:\"z\",points:[],start:void 0,pathLength:0})}return e},this.getPathLength=function(){if(void 0===this.pathLength||null===this.pathLength||isNaN(this.pathLength))for(var t=this.pathLength=0;t<this.dataArray.length;t++)0<this.dataArray[t].pathLength&&(this.pathLength+=this.dataArray[t].pathLength);return this.pathLength},this.getPointOnPath=function(t){var e=0,i=this.getPathLength(),n=void 0;if(!(t<-5e-5||i<t-5e-5))for(var s=0;s<this.dataArray.length;s++){var a=this.dataArray[s];if(!a||!(a.pathLength<5e-5||e+a.pathLength+5e-5<t)){var r=t-e,o=void 0;switch(a.command){case\"L\":n=this.getPointOnLine(r,a.start.x,a.start.y,a.points[0],a.points[1],a.start.x,a.start.y);break;case\"A\":var h=a.points[4],l=a.points[5],u=a.points[4]+l;if(o=h+r/a.pathLength*l,l<0&&o<u||0<=l&&u<o)break;n=this.getPointOnEllipticalArc(a.points[0],a.points[1],a.points[2],a.points[3],o,a.points[6]);break;case\"C\":1<(o=r/a.pathLength)&&(o=1),n=this.getPointOnCubicBezier(o,a.start.x,a.start.y,a.points[0],a.points[1],a.points[2],a.points[3],a.points[4],a.points[5]);break;case\"Q\":1<(o=r/a.pathLength)&&(o=1),n=this.getPointOnQuadraticBezier(o,a.start.x,a.start.y,a.points[0],a.points[1],a.points[2],a.points[3])}if(void 0!==n&&n!=={})return n;break}e+=a.pathLength}},this.buildEquidistantCache=function(t,e){var i=this.getPathLength();if(e=e||.25,t=t||i/100,this.equidistantCache=this.equidistantCache||{},!this.equidistantCache.hasOwnProperty(\"points\")||this.equidistantCache.step!=t||this.equidistantCache.precision!=e){this.equidistantCache={step:t,precision:e,points:[]};for(var n=0,s=0;s<=i;s+=e){var a=this.getPointOnPath(s),r=this.getPointOnPath(s+e);void 0!==a&&void 0!==r&&(t<=(n+=this.getLineLength(a.x,a.y,r.x,r.y))&&(this.equidistantCache.points.push({x:a.x,y:a.y,distance:s}),n-=t))}}},this.getEquidistantPointOnPath=function(t,e,i){if(this.buildEquidistantCache(e,i),!(t<0||5e-5<t-this.getPathLength())){var n=Math.round(t/this.getPathLength()*(this.equidistantCache.points.length-1));return this.equidistantCache.points[n]||void 0}},this.getLineLength=function(t,e,i,n){return Math.sqrt((i-t)*(i-t)+(n-e)*(n-e))},this.getPointOnLine=function(t,e,i,n,s,a,r){void 0===a&&(a=e),void 0===r&&(r=i);var o=(s-i)/(n-e+1e-8),h=Math.sqrt(t*t/(1+o*o));n<e&&(h*=-1);var l,u=o*h;if(n===e)l={x:a,y:r+u};else if((r-i)/(a-e+1e-8)===o)l={x:a+h,y:r+u};else{var c,f,p=this.getLineLength(e,i,n,s);if(p<1e-8)return;var d=(a-e)*(n-e)+(r-i)*(s-i);c=e+(d/=p*p)*(n-e),f=i+d*(s-i);var m=this.getLineLength(a,r,c,f),y=Math.sqrt(t*t-m*m);h=Math.sqrt(y*y/(1+o*o)),n<e&&(h*=-1),l={x:c+h,y:f+(u=o*h)}}return l},this.getPointOnCubicBezier=function(t,e,i,n,s,a,r,o,h){function l(t){return t*t*t}function u(t){return 3*t*t*(1-t)}function c(t){return 3*t*(1-t)*(1-t)}function f(t){return(1-t)*(1-t)*(1-t)}return{x:o*l(t)+a*u(t)+n*c(t)+e*f(t),y:h*l(t)+r*u(t)+s*c(t)+i*f(t)}},this.getPointOnQuadraticBezier=function(t,e,i,n,s,a,r){function o(t){return t*t}function h(t){return 2*t*(1-t)}function l(t){return(1-t)*(1-t)}return{x:a*o(t)+n*h(t)+e*l(t),y:r*o(t)+s*h(t)+i*l(t)}},this.getPointOnEllipticalArc=function(t,e,i,n,s,a){var r=Math.cos(a),o=Math.sin(a),h=i*Math.cos(s),l=n*Math.sin(s);return{x:t+(h*r-l*o),y:e+(h*o+l*r)}},this.calcLength=function(t,e,i,n){var s,a,r,o;switch(i){case\"L\":return this.getLineLength(t,e,n[0],n[1]);case\"C\":for(s=0,a=this.getPointOnCubicBezier(0,t,e,n[0],n[1],n[2],n[3],n[4],n[5]),o=.01;o<=1;o+=.01)r=this.getPointOnCubicBezier(o,t,e,n[0],n[1],n[2],n[3],n[4],n[5]),s+=this.getLineLength(a.x,a.y,r.x,r.y),a=r;return s;case\"Q\":for(s=0,a=this.getPointOnQuadraticBezier(0,t,e,n[0],n[1],n[2],n[3]),o=.01;o<=1;o+=.01)r=this.getPointOnQuadraticBezier(o,t,e,n[0],n[1],n[2],n[3]),s+=this.getLineLength(a.x,a.y,r.x,r.y),a=r;return s;case\"A\":s=0;var h=n[4],l=n[5],u=n[4]+l,c=Math.PI/180;if(Math.abs(h-u)<c&&(c=Math.abs(h-u)),a=this.getPointOnEllipticalArc(n[0],n[1],n[2],n[3],h,0),l<0)for(o=h-c;u<o;o-=c)r=this.getPointOnEllipticalArc(n[0],n[1],n[2],n[3],o,0),s+=this.getLineLength(a.x,a.y,r.x,r.y),a=r;else for(o=h+c;o<u;o+=c)r=this.getPointOnEllipticalArc(n[0],n[1],n[2],n[3],o,0),s+=this.getLineLength(a.x,a.y,r.x,r.y),a=r;return r=this.getPointOnEllipticalArc(n[0],n[1],n[2],n[3],u,0),s+=this.getLineLength(a.x,a.y,r.x,r.y)}return 0},this.dataArray=this.parsePathData(e)},D.Element.textPath.prototype=new D.Element.TextElementBase,D.Element.image=function(t){this.base=D.Element.RenderedElementBase,this.base(t);var e=this.getHrefAttribute().value;if(\"\"!=e){var a=e.match(/\\.svg$/);if(D.Images.push(this),this.loaded=!1,a)this.img=D.ajax(e),this.loaded=!0;else{this.img=c.createElement(\"img\"),1==D.opts.useCORS&&(this.img.crossOrigin=\"Anonymous\");var r=this;this.img.onload=function(){r.loaded=!0},this.img.onerror=function(){D.log('ERROR: image \"'+e+'\" not found'),r.loaded=!0},this.img.src=e}this.renderChildren=function(t){var e=this.attribute(\"x\").toPixels(\"x\"),i=this.attribute(\"y\").toPixels(\"y\"),n=this.attribute(\"width\").toPixels(\"x\"),s=this.attribute(\"height\").toPixels(\"y\");0!=n&&0!=s&&(t.save(),a?t.drawSvg(this.img,e,i,n,s):(t.translate(e,i),D.AspectRatio(t,this.attribute(\"preserveAspectRatio\").value,n,this.img.width,s,this.img.height,0,0),r.loaded&&(void 0===this.img.complete||this.img.complete)&&t.drawImage(this.img,0,0)),t.restore())},this.getBoundingBox=function(){var t=this.attribute(\"x\").toPixels(\"x\"),e=this.attribute(\"y\").toPixels(\"y\"),i=this.attribute(\"width\").toPixels(\"x\"),n=this.attribute(\"height\").toPixels(\"y\");return new D.BoundingBox(t,e,t+i,e+n)}}},D.Element.image.prototype=new D.Element.RenderedElementBase,D.Element.g=function(t){this.base=D.Element.RenderedElementBase,this.base(t),this.getBoundingBox=function(t){for(var e=new D.BoundingBox,i=0;i<this.children.length;i++)e.addBoundingBox(this.children[i].getBoundingBox(t));return e}},D.Element.g.prototype=new D.Element.RenderedElementBase,D.Element.symbol=function(t){this.base=D.Element.RenderedElementBase,this.base(t),this.render=function(){}},D.Element.symbol.prototype=new D.Element.RenderedElementBase,D.ParseExternalUrl=function(t){var e=t.match(/url\\(('([^']+)'|\"([^\"]+)\"|([^'\"\\)]+))\\)/)||[];return e[2]||e[3]||e[4]},D.Element.style=function(t){this.base=D.Element.ElementBase,this.base(t);for(var e=\"\",i=0;i<t.childNodes.length;i++)e+=t.childNodes[i].data;e=e.replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm,\"\");var n=(e=D.compressSpaces(e)).split(\"}\");for(i=0;i<n.length;i++)if(\"\"!=D.trim(n[i]))for(var s=n[i].split(\"{\"),a=s[0].split(\",\"),r=s[1].split(\";\"),o=0;o<a.length;o++){var h=D.trim(a[o]);if(\"\"!=h){for(var l=D.Styles[h]||{},u=0;u<r.length;u++){var c=r[u].indexOf(\":\"),f=r[u].substr(0,c),p=r[u].substr(c+1,r[u].length-c);null!=f&&null!=p&&(l[D.trim(f)]=new D.Property(D.trim(f),D.trim(p)))}if(D.Styles[h]=l,D.StylesSpecificity[h]=P(h),\"@font-face\"==h)for(var d=l[\"font-family\"].value.replace(/\"/g,\"\"),m=l.src.value.split(\",\"),y=0;y<m.length;y++)if(0<m[y].indexOf('format(\"svg\")')){var v=D.ParseExternalUrl(m[y]);if(v)for(var g=D.parseXml(D.ajax(v)).getElementsByTagName(\"font\"),x=0;x<g.length;x++){var b=D.CreateElement(g[x]);D.Definitions[d]=b}}}}},D.Element.style.prototype=new D.Element.ElementBase,D.Element.use=function(t){this.base=D.Element.RenderedElementBase,this.base(t),this.baseSetContext=this.setContext,this.setContext=function(t){this.baseSetContext(t),this.attribute(\"x\").hasValue()&&t.translate(this.attribute(\"x\").toPixels(\"x\"),0),this.attribute(\"y\").hasValue()&&t.translate(0,this.attribute(\"y\").toPixels(\"y\"))};var n=this.getHrefAttribute().getDefinition();this.path=function(t){null!=n&&n.path(t)},this.elementTransform=function(){if(null!=n&&n.style(\"transform\",!1,!0).hasValue())return new D.Transform(n.style(\"transform\",!1,!0).value)},this.getBoundingBox=function(t){if(null!=n)return n.getBoundingBox(t)},this.renderChildren=function(t){if(null!=n){var e=n;\"symbol\"==n.type&&((e=new D.Element.svg).type=\"svg\",e.attributes.viewBox=new D.Property(\"viewBox\",n.attribute(\"viewBox\").value),e.attributes.preserveAspectRatio=new D.Property(\"preserveAspectRatio\",n.attribute(\"preserveAspectRatio\").value),e.attributes.overflow=new D.Property(\"overflow\",n.attribute(\"overflow\").value),e.children=n.children),\"svg\"==e.type&&(this.attribute(\"width\").hasValue()&&(e.attributes.width=new D.Property(\"width\",this.attribute(\"width\").value)),this.attribute(\"height\").hasValue()&&(e.attributes.height=new D.Property(\"height\",this.attribute(\"height\").value)));var i=e.parent;e.parent=null,e.render(t),e.parent=i}}},D.Element.use.prototype=new D.Element.RenderedElementBase,D.Element.mask=function(t){this.base=D.Element.ElementBase,this.base(t),this.apply=function(t,e){var i=this.attribute(\"x\").toPixels(\"x\"),n=this.attribute(\"y\").toPixels(\"y\"),s=this.attribute(\"width\").toPixels(\"x\"),a=this.attribute(\"height\").toPixels(\"y\");if(0==s&&0==a){for(var r=new D.BoundingBox,o=0;o<this.children.length;o++)r.addBoundingBox(this.children[o].getBoundingBox(t));i=Math.floor(r.x1),n=Math.floor(r.y1),s=Math.floor(r.width()),a=Math.floor(r.height())}var h=e.style(\"mask\").value;e.style(\"mask\").value=\"\";var l=d(i+s,n+a),u=l.getContext(\"2d\");D.SetDefaults(u),this.renderChildren(u),new D.Element.feColorMatrix({nodeType:1,childNodes:[],attributes:[{nodeName:\"type\",value:\"luminanceToAlpha\"},{nodeName:\"includeOpacity\",value:\"true\"}]}).apply(u,0,0,i+s,n+a);var c=d(i+s,n+a),f=c.getContext(\"2d\");D.SetDefaults(f),e.render(f),f.globalCompositeOperation=\"destination-in\",f.fillStyle=u.createPattern(l,\"no-repeat\"),f.fillRect(0,0,i+s,n+a),t.fillStyle=f.createPattern(c,\"no-repeat\"),t.fillRect(0,0,i+s,n+a),e.style(\"mask\").value=h},this.render=function(){}},D.Element.mask.prototype=new D.Element.ElementBase,D.Element.clipPath=function(t){this.base=D.Element.ElementBase,this.base(t),this.apply=function(t){var e=\"undefined\"!=typeof CanvasRenderingContext2D,i=t.beginPath,n=t.closePath;e&&(CanvasRenderingContext2D.prototype.beginPath=function(){},CanvasRenderingContext2D.prototype.closePath=function(){}),i.call(t);for(var s=0;s<this.children.length;s++){var a=this.children[s];if(void 0!==a.path){var r=void 0!==a.elementTransform&&a.elementTransform();!r&&a.style(\"transform\",!1,!0).hasValue()&&(r=new D.Transform(a.style(\"transform\",!1,!0).value)),r&&r.apply(t),a.path(t),e&&(CanvasRenderingContext2D.prototype.closePath=n),r&&r.unapply(t)}}n.call(t),t.clip(),e&&(CanvasRenderingContext2D.prototype.beginPath=i,CanvasRenderingContext2D.prototype.closePath=n)},this.render=function(){}},D.Element.clipPath.prototype=new D.Element.ElementBase,D.Element.filter=function(t){this.base=D.Element.ElementBase,this.base(t),this.apply=function(t,e){var i=e.getBoundingBox(t),n=Math.floor(i.x1),s=Math.floor(i.y1),a=Math.floor(i.width()),r=Math.floor(i.height()),o=e.style(\"filter\").value;e.style(\"filter\").value=\"\";for(var h=0,l=0,u=0;u<this.children.length;u++){var c=this.children[u].extraFilterDistance||0;h=Math.max(h,c),l=Math.max(l,c)}var f=d(a+2*h,r+2*l),p=f.getContext(\"2d\");D.SetDefaults(p),p.translate(-n+h,-s+l),e.render(p);for(u=0;u<this.children.length;u++)\"function\"==typeof this.children[u].apply&&this.children[u].apply(p,0,0,a+2*h,r+2*l);t.drawImage(f,0,0,a+2*h,r+2*l,n-h,s-l,a+2*h,r+2*l),e.style(\"filter\",!0).value=o},this.render=function(){}},D.Element.filter.prototype=new D.Element.ElementBase,D.Element.feDropShadow=function(t){this.base=D.Element.ElementBase,this.base(t),this.addStylesFromStyleDefinition(),this.apply=function(){}},D.Element.feDropShadow.prototype=new D.Element.ElementBase,D.Element.feMorphology=function(t){this.base=D.Element.ElementBase,this.base(t),this.apply=function(){}},D.Element.feMorphology.prototype=new D.Element.ElementBase,D.Element.feComposite=function(t){this.base=D.Element.ElementBase,this.base(t),this.apply=function(){}},D.Element.feComposite.prototype=new D.Element.ElementBase,D.Element.feColorMatrix=function(t){this.base=D.Element.ElementBase,this.base(t);var n=D.ToNumberArray(this.attribute(\"values\").value);switch(this.attribute(\"type\").valueOrDefault(\"matrix\")){case\"saturate\":var e=n[0];n=[.213+.787*e,.715-.715*e,.072-.072*e,0,0,.213-.213*e,.715+.285*e,.072-.072*e,0,0,.213-.213*e,.715-.715*e,.072+.928*e,0,0,0,0,0,1,0,0,0,0,0,1];break;case\"hueRotate\":var s=n[0]*Math.PI/180,i=function(t,e,i){return t+Math.cos(s)*e+Math.sin(s)*i};n=[i(.213,.787,-.213),i(.715,-.715,-.715),i(.072,-.072,.928),0,0,i(.213,-.213,.143),i(.715,.285,.14),i(.072,-.072,-.283),0,0,i(.213,-.213,-.787),i(.715,-.715,.715),i(.072,.928,.072),0,0,0,0,0,1,0,0,0,0,0,1];break;case\"luminanceToAlpha\":n=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.2125,.7154,.0721,0,0,0,0,0,0,1]}function d(t,e,i,n,s,a){return t[i*n*4+4*e+a]}function m(t,e,i,n,s,a,r){t[i*n*4+4*e+a]=r}function y(t,e){var i=n[t];return i*(i<0?e-255:e)}var v=this.attribute(\"includeOpacity\").hasValue();this.apply=function(t,e,i,n,s){var a=t.getImageData(0,0,n,s);for(i=0;i<s;i++)for(e=0;e<n;e++){var r=d(a.data,e,i,n,0,0),o=d(a.data,e,i,n,0,1),h=d(a.data,e,i,n,0,2),l=d(a.data,e,i,n,0,3),u=y(0,r)+y(1,o)+y(2,h)+y(3,l)+y(4,1),c=y(5,r)+y(6,o)+y(7,h)+y(8,l)+y(9,1),f=y(10,r)+y(11,o)+y(12,h)+y(13,l)+y(14,1),p=y(15,r)+y(16,o)+y(17,h)+y(18,l)+y(19,1);v&&(u=c=f=0,p*=l/255),m(a.data,e,i,n,0,0,u),m(a.data,e,i,n,0,1,c),m(a.data,e,i,n,0,2,f),m(a.data,e,i,n,0,3,p)}t.clearRect(0,0,n,s),t.putImageData(a,0,0)}},D.Element.feColorMatrix.prototype=new D.Element.ElementBase,D.Element.feGaussianBlur=function(t){this.base=D.Element.ElementBase,this.base(t),this.blurRadius=Math.floor(this.attribute(\"stdDeviation\").numValue()),this.extraFilterDistance=this.blurRadius,this.apply=function(t,e,i,n,s){v&&void 0!==v.canvasRGBA?(t.canvas.id=D.UniqueId(),t.canvas.style.display=\"none\",c.body.appendChild(t.canvas),v.canvasRGBA(t.canvas,e,i,n,s,this.blurRadius),c.body.removeChild(t.canvas)):D.log(\"ERROR: StackBlur.js must be included for blur to work\")}},D.Element.feGaussianBlur.prototype=new D.Element.ElementBase,D.Element.title=function(){},D.Element.title.prototype=new D.Element.ElementBase,D.Element.desc=function(){},D.Element.desc.prototype=new D.Element.ElementBase,D.Element.MISSING=function(t){D.log(\"ERROR: Element '\"+t.nodeName+\"' not yet implemented.\")},D.Element.MISSING.prototype=new D.Element.ElementBase,D.CreateElement=function(t){var e=t.nodeName.replace(/^[^:]+:/,\"\");e=e.replace(/\\-/g,\"\");var i=null;return(i=void 0!==D.Element[e]?new D.Element[e](t):new D.Element.MISSING(t)).type=t.nodeName,i},D.load=function(t,e){D.loadXml(t,D.ajax(e))},D.loadXml=function(t,e){D.loadXmlDoc(t,D.parseXml(e))},D.loadXmlDoc=function(a,r){D.init(a);var i=function(t){for(var e=a.canvas;e;)t.x-=e.offsetLeft,t.y-=e.offsetTop,e=e.offsetParent;return l.scrollX&&(t.x+=l.scrollX),l.scrollY&&(t.y+=l.scrollY),t};1!=D.opts.ignoreMouse&&(a.canvas.onclick=function(t){var e=i(new D.Point(null!=t?t.clientX:event.clientX,null!=t?t.clientY:event.clientY));D.Mouse.onclick(e.x,e.y)},a.canvas.onmousemove=function(t){var e=i(new D.Point(null!=t?t.clientX:event.clientX,null!=t?t.clientY:event.clientY));D.Mouse.onmousemove(e.x,e.y)});var o=D.CreateElement(r.documentElement);o.root=!0,o.addStylesFromStyleDefinition();var h=!0,n=function(){D.ViewPort.Clear(),a.canvas.parentNode?D.ViewPort.SetCurrent(a.canvas.parentNode.clientWidth,a.canvas.parentNode.clientHeight):D.ViewPort.SetCurrent(800,600),1!=D.opts.ignoreDimensions&&(h||null==D.opts.scaleWidth&&null==D.opts.scaleHeight)&&(o.style(\"width\").hasValue()&&(a.canvas.width=o.style(\"width\").toPixels(\"x\"),a.canvas.style&&(a.canvas.style.width=a.canvas.width+\"px\")),o.style(\"height\").hasValue()&&(a.canvas.height=o.style(\"height\").toPixels(\"y\"),a.canvas.style&&(a.canvas.style.height=a.canvas.height+\"px\")));var t=a.canvas.clientWidth||a.canvas.width,e=a.canvas.clientHeight||a.canvas.height;if(1==D.opts.ignoreDimensions&&o.style(\"width\").hasValue()&&o.style(\"height\").hasValue()&&(t=o.style(\"width\").toPixels(\"x\"),e=o.style(\"height\").toPixels(\"y\")),D.ViewPort.SetCurrent(t,e),null!=D.opts.offsetX&&(o.attribute(\"x\",!0).value=D.opts.offsetX),null!=D.opts.offsetY&&(o.attribute(\"y\",!0).value=D.opts.offsetY),null!=D.opts.scaleWidth||null!=D.opts.scaleHeight){var i=null,n=null,s=D.ToNumberArray(o.attribute(\"viewBox\").value);null!=D.opts.scaleWidth&&(o.attribute(\"width\").hasValue()?i=o.attribute(\"width\").toPixels(\"x\")/D.opts.scaleWidth:isNaN(s[2])||(i=s[2]/D.opts.scaleWidth)),null!=D.opts.scaleHeight&&(o.attribute(\"height\").hasValue()?n=o.attribute(\"height\").toPixels(\"y\")/D.opts.scaleHeight:isNaN(s[3])||(n=s[3]/D.opts.scaleHeight)),null==i&&(i=n),null==n&&(n=i),o.attribute(\"width\",!0).value=D.opts.scaleWidth,o.attribute(\"height\",!0).value=D.opts.scaleHeight,o.style(\"transform\",!0,!0).value+=\" scale(\"+1/i+\",\"+1/n+\")\"}1!=D.opts.ignoreClear&&a.clearRect(0,0,t,e),o.render(a),h&&(h=!1,\"function\"==typeof D.opts.renderCallback&&D.opts.renderCallback(r))},s=!0;D.ImagesLoaded()&&(s=!1,n()),D.intervalID=setInterval(function(){var t=!1;if(s&&D.ImagesLoaded()&&(t=!(s=!1)),1!=D.opts.ignoreMouse&&(t=t||D.Mouse.hasEvents()),1!=D.opts.ignoreAnimation)for(var e=0;e<D.Animations.length;e++){var i=D.Animations[e].update(1e3/D.FRAMERATE);t=t||i}\"function\"==typeof D.opts.forceRedraw&&1==D.opts.forceRedraw()&&(t=!0),t&&(n(),D.Mouse.runEvents())},1e3/D.FRAMERATE)},D.stop=function(){D.intervalID&&clearInterval(D.intervalID)},D.Mouse=new function(){this.events=[],this.hasEvents=function(){return 0!=this.events.length},this.onclick=function(t,e){this.events.push({type:\"onclick\",x:t,y:e,run:function(t){t.onclick&&t.onclick()}})},this.onmousemove=function(t,e){this.events.push({type:\"onmousemove\",x:t,y:e,run:function(t){t.onmousemove&&t.onmousemove()}})},this.eventElements=[],this.checkPath=function(t,e){for(var i=0;i<this.events.length;i++){var n=this.events[i];e.isPointInPath&&e.isPointInPath(n.x,n.y)&&(this.eventElements[i]=t)}},this.checkBoundingBox=function(t,e){if(e)for(var i=0;i<this.events.length;i++){var n=this.events[i];e.isPointInBox(n.x,n.y)&&(this.eventElements[i]=t)}},this.runEvents=function(){D.ctx.canvas.style.cursor=\"\";for(var t=0;t<this.events.length;t++)for(var e=this.events[t],i=this.eventElements[t];i;)e.run(i),i=i.parent;this.events=[],this.eventElements=[]}},D}\"undefined\"!=typeof CanvasRenderingContext2D&&(CanvasRenderingContext2D.prototype.drawSvg=function(t,e,i,n,s,a){var r={ignoreMouse:!0,ignoreAnimation:!0,ignoreDimensions:!0,ignoreClear:!0,offsetX:e,offsetY:i,scaleWidth:n,scaleHeight:s};for(var o in a)a.hasOwnProperty(o)&&(r[o]=a[o]);p(this.canvas,t,r)}),p._build=m,t.exports=p}(t={exports:{}},t.exports),t.exports});"]}